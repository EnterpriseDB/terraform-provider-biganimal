/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RunSearchForEventsRequestPaging struct for RunSearchForEventsRequestPaging
type RunSearchForEventsRequestPaging struct {
	Limit *float32 `json:"limit,omitempty"`
	Offset *float32 `json:"offset,omitempty"`
}

// NewRunSearchForEventsRequestPaging instantiates a new RunSearchForEventsRequestPaging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunSearchForEventsRequestPaging() *RunSearchForEventsRequestPaging {
	this := RunSearchForEventsRequestPaging{}
	return &this
}

// NewRunSearchForEventsRequestPagingWithDefaults instantiates a new RunSearchForEventsRequestPaging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunSearchForEventsRequestPagingWithDefaults() *RunSearchForEventsRequestPaging {
	this := RunSearchForEventsRequestPaging{}
	return &this
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *RunSearchForEventsRequestPaging) GetLimit() float32 {
	if o == nil || o.Limit == nil {
		var ret float32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunSearchForEventsRequestPaging) GetLimitOk() (*float32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *RunSearchForEventsRequestPaging) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given float32 and assigns it to the Limit field.
func (o *RunSearchForEventsRequestPaging) SetLimit(v float32) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *RunSearchForEventsRequestPaging) GetOffset() float32 {
	if o == nil || o.Offset == nil {
		var ret float32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunSearchForEventsRequestPaging) GetOffsetOk() (*float32, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *RunSearchForEventsRequestPaging) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given float32 and assigns it to the Offset field.
func (o *RunSearchForEventsRequestPaging) SetOffset(v float32) {
	o.Offset = &v
}

func (o RunSearchForEventsRequestPaging) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	return json.Marshal(toSerialize)
}

type NullableRunSearchForEventsRequestPaging struct {
	value *RunSearchForEventsRequestPaging
	isSet bool
}

func (v NullableRunSearchForEventsRequestPaging) Get() *RunSearchForEventsRequestPaging {
	return v.value
}

func (v *NullableRunSearchForEventsRequestPaging) Set(val *RunSearchForEventsRequestPaging) {
	v.value = val
	v.isSet = true
}

func (v NullableRunSearchForEventsRequestPaging) IsSet() bool {
	return v.isSet
}

func (v *NullableRunSearchForEventsRequestPaging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunSearchForEventsRequestPaging(val *RunSearchForEventsRequestPaging) *NullableRunSearchForEventsRequestPaging {
	return &NullableRunSearchForEventsRequestPaging{value: val, isSet: true}
}

func (v NullableRunSearchForEventsRequestPaging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunSearchForEventsRequestPaging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


