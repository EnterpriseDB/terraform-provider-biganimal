/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IntegrationsAzureEvent struct for IntegrationsAzureEvent
type IntegrationsAzureEvent struct {
	// The operation ID in Azure, will call with Azure operation GET API
	Id *string `json:"id,omitempty"`
	// Provided by Azure. We store it for future usage
	ActivityId *string `json:"activityId,omitempty"`
	// The GUID identifier for the SaaS resource which status changes
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	// A unique string identifier for each publisher
	PublisherId *string `json:"publisherId,omitempty"`
	// A unique string identifier for each offer
	OfferId *string `json:"offerId,omitempty"`
	// The most up-to-date plan ID
	PlanId *string `json:"planId,omitempty"`
	// The most up-to-date number of seats, can be empty if not relevant
	Quantity *int32 `json:"quantity,omitempty"`
	// The UTC time when the webhook was called
	TimeStamp *string `json:"timeStamp,omitempty"`
	// The operation the webhook notifies about
	Action *string `json:"action,omitempty"`
	// Can be either InProgress or Success
	Status *string `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IntegrationsAzureEvent IntegrationsAzureEvent

// NewIntegrationsAzureEvent instantiates a new IntegrationsAzureEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationsAzureEvent() *IntegrationsAzureEvent {
	this := IntegrationsAzureEvent{}
	return &this
}

// NewIntegrationsAzureEventWithDefaults instantiates a new IntegrationsAzureEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationsAzureEventWithDefaults() *IntegrationsAzureEvent {
	this := IntegrationsAzureEvent{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IntegrationsAzureEvent) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationsAzureEvent) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IntegrationsAzureEvent) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IntegrationsAzureEvent) SetId(v string) {
	o.Id = &v
}

// GetActivityId returns the ActivityId field value if set, zero value otherwise.
func (o *IntegrationsAzureEvent) GetActivityId() string {
	if o == nil || o.ActivityId == nil {
		var ret string
		return ret
	}
	return *o.ActivityId
}

// GetActivityIdOk returns a tuple with the ActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationsAzureEvent) GetActivityIdOk() (*string, bool) {
	if o == nil || o.ActivityId == nil {
		return nil, false
	}
	return o.ActivityId, true
}

// HasActivityId returns a boolean if a field has been set.
func (o *IntegrationsAzureEvent) HasActivityId() bool {
	if o != nil && o.ActivityId != nil {
		return true
	}

	return false
}

// SetActivityId gets a reference to the given string and assigns it to the ActivityId field.
func (o *IntegrationsAzureEvent) SetActivityId(v string) {
	o.ActivityId = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *IntegrationsAzureEvent) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationsAzureEvent) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || o.SubscriptionId == nil {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *IntegrationsAzureEvent) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId != nil {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *IntegrationsAzureEvent) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetPublisherId returns the PublisherId field value if set, zero value otherwise.
func (o *IntegrationsAzureEvent) GetPublisherId() string {
	if o == nil || o.PublisherId == nil {
		var ret string
		return ret
	}
	return *o.PublisherId
}

// GetPublisherIdOk returns a tuple with the PublisherId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationsAzureEvent) GetPublisherIdOk() (*string, bool) {
	if o == nil || o.PublisherId == nil {
		return nil, false
	}
	return o.PublisherId, true
}

// HasPublisherId returns a boolean if a field has been set.
func (o *IntegrationsAzureEvent) HasPublisherId() bool {
	if o != nil && o.PublisherId != nil {
		return true
	}

	return false
}

// SetPublisherId gets a reference to the given string and assigns it to the PublisherId field.
func (o *IntegrationsAzureEvent) SetPublisherId(v string) {
	o.PublisherId = &v
}

// GetOfferId returns the OfferId field value if set, zero value otherwise.
func (o *IntegrationsAzureEvent) GetOfferId() string {
	if o == nil || o.OfferId == nil {
		var ret string
		return ret
	}
	return *o.OfferId
}

// GetOfferIdOk returns a tuple with the OfferId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationsAzureEvent) GetOfferIdOk() (*string, bool) {
	if o == nil || o.OfferId == nil {
		return nil, false
	}
	return o.OfferId, true
}

// HasOfferId returns a boolean if a field has been set.
func (o *IntegrationsAzureEvent) HasOfferId() bool {
	if o != nil && o.OfferId != nil {
		return true
	}

	return false
}

// SetOfferId gets a reference to the given string and assigns it to the OfferId field.
func (o *IntegrationsAzureEvent) SetOfferId(v string) {
	o.OfferId = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *IntegrationsAzureEvent) GetPlanId() string {
	if o == nil || o.PlanId == nil {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationsAzureEvent) GetPlanIdOk() (*string, bool) {
	if o == nil || o.PlanId == nil {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *IntegrationsAzureEvent) HasPlanId() bool {
	if o != nil && o.PlanId != nil {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *IntegrationsAzureEvent) SetPlanId(v string) {
	o.PlanId = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *IntegrationsAzureEvent) GetQuantity() int32 {
	if o == nil || o.Quantity == nil {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationsAzureEvent) GetQuantityOk() (*int32, bool) {
	if o == nil || o.Quantity == nil {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *IntegrationsAzureEvent) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *IntegrationsAzureEvent) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetTimeStamp returns the TimeStamp field value if set, zero value otherwise.
func (o *IntegrationsAzureEvent) GetTimeStamp() string {
	if o == nil || o.TimeStamp == nil {
		var ret string
		return ret
	}
	return *o.TimeStamp
}

// GetTimeStampOk returns a tuple with the TimeStamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationsAzureEvent) GetTimeStampOk() (*string, bool) {
	if o == nil || o.TimeStamp == nil {
		return nil, false
	}
	return o.TimeStamp, true
}

// HasTimeStamp returns a boolean if a field has been set.
func (o *IntegrationsAzureEvent) HasTimeStamp() bool {
	if o != nil && o.TimeStamp != nil {
		return true
	}

	return false
}

// SetTimeStamp gets a reference to the given string and assigns it to the TimeStamp field.
func (o *IntegrationsAzureEvent) SetTimeStamp(v string) {
	o.TimeStamp = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *IntegrationsAzureEvent) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationsAzureEvent) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *IntegrationsAzureEvent) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *IntegrationsAzureEvent) SetAction(v string) {
	o.Action = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *IntegrationsAzureEvent) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationsAzureEvent) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *IntegrationsAzureEvent) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *IntegrationsAzureEvent) SetStatus(v string) {
	o.Status = &v
}

func (o IntegrationsAzureEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ActivityId != nil {
		toSerialize["activityId"] = o.ActivityId
	}
	if o.SubscriptionId != nil {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if o.PublisherId != nil {
		toSerialize["publisherId"] = o.PublisherId
	}
	if o.OfferId != nil {
		toSerialize["offerId"] = o.OfferId
	}
	if o.PlanId != nil {
		toSerialize["planId"] = o.PlanId
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	if o.TimeStamp != nil {
		toSerialize["timeStamp"] = o.TimeStamp
	}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *IntegrationsAzureEvent) UnmarshalJSON(bytes []byte) (err error) {
	varIntegrationsAzureEvent := _IntegrationsAzureEvent{}

	if err = json.Unmarshal(bytes, &varIntegrationsAzureEvent); err == nil {
		*o = IntegrationsAzureEvent(varIntegrationsAzureEvent)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "activityId")
		delete(additionalProperties, "subscriptionId")
		delete(additionalProperties, "publisherId")
		delete(additionalProperties, "offerId")
		delete(additionalProperties, "planId")
		delete(additionalProperties, "quantity")
		delete(additionalProperties, "timeStamp")
		delete(additionalProperties, "action")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIntegrationsAzureEvent struct {
	value *IntegrationsAzureEvent
	isSet bool
}

func (v NullableIntegrationsAzureEvent) Get() *IntegrationsAzureEvent {
	return v.value
}

func (v *NullableIntegrationsAzureEvent) Set(val *IntegrationsAzureEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationsAzureEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationsAzureEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationsAzureEvent(val *IntegrationsAzureEvent) *NullableIntegrationsAzureEvent {
	return &NullableIntegrationsAzureEvent{value: val, isSet: true}
}

func (v NullableIntegrationsAzureEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationsAzureEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


