/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterArchitecture struct for ClusterArchitecture
type ClusterArchitecture struct {
	ClusterArchitectureId string `json:"clusterArchitectureId"`
	ClusterArchitectureName string `json:"clusterArchitectureName"`
	Enabled bool `json:"enabled"`
}

// NewClusterArchitecture instantiates a new ClusterArchitecture object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterArchitecture(clusterArchitectureId string, clusterArchitectureName string, enabled bool) *ClusterArchitecture {
	this := ClusterArchitecture{}
	this.ClusterArchitectureId = clusterArchitectureId
	this.ClusterArchitectureName = clusterArchitectureName
	this.Enabled = enabled
	return &this
}

// NewClusterArchitectureWithDefaults instantiates a new ClusterArchitecture object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterArchitectureWithDefaults() *ClusterArchitecture {
	this := ClusterArchitecture{}
	return &this
}

// GetClusterArchitectureId returns the ClusterArchitectureId field value
func (o *ClusterArchitecture) GetClusterArchitectureId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterArchitectureId
}

// GetClusterArchitectureIdOk returns a tuple with the ClusterArchitectureId field value
// and a boolean to check if the value has been set.
func (o *ClusterArchitecture) GetClusterArchitectureIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterArchitectureId, true
}

// SetClusterArchitectureId sets field value
func (o *ClusterArchitecture) SetClusterArchitectureId(v string) {
	o.ClusterArchitectureId = v
}

// GetClusterArchitectureName returns the ClusterArchitectureName field value
func (o *ClusterArchitecture) GetClusterArchitectureName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterArchitectureName
}

// GetClusterArchitectureNameOk returns a tuple with the ClusterArchitectureName field value
// and a boolean to check if the value has been set.
func (o *ClusterArchitecture) GetClusterArchitectureNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterArchitectureName, true
}

// SetClusterArchitectureName sets field value
func (o *ClusterArchitecture) SetClusterArchitectureName(v string) {
	o.ClusterArchitectureName = v
}

// GetEnabled returns the Enabled field value
func (o *ClusterArchitecture) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ClusterArchitecture) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ClusterArchitecture) SetEnabled(v bool) {
	o.Enabled = v
}

func (o ClusterArchitecture) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clusterArchitectureId"] = o.ClusterArchitectureId
	}
	if true {
		toSerialize["clusterArchitectureName"] = o.ClusterArchitectureName
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableClusterArchitecture struct {
	value *ClusterArchitecture
	isSet bool
}

func (v NullableClusterArchitecture) Get() *ClusterArchitecture {
	return v.value
}

func (v *NullableClusterArchitecture) Set(val *ClusterArchitecture) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterArchitecture) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterArchitecture) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterArchitecture(val *ClusterArchitecture) *NullableClusterArchitecture {
	return &NullableClusterArchitecture{value: val, isSet: true}
}

func (v NullableClusterArchitecture) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterArchitecture) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


