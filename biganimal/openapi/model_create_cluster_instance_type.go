/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateClusterInstanceType struct for CreateClusterInstanceType
type CreateClusterInstanceType struct {
	InstanceTypeId string `json:"instanceTypeId"`
}

// NewCreateClusterInstanceType instantiates a new CreateClusterInstanceType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateClusterInstanceType(instanceTypeId string) *CreateClusterInstanceType {
	this := CreateClusterInstanceType{}
	this.InstanceTypeId = instanceTypeId
	return &this
}

// NewCreateClusterInstanceTypeWithDefaults instantiates a new CreateClusterInstanceType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateClusterInstanceTypeWithDefaults() *CreateClusterInstanceType {
	this := CreateClusterInstanceType{}
	return &this
}

// GetInstanceTypeId returns the InstanceTypeId field value
func (o *CreateClusterInstanceType) GetInstanceTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceTypeId
}

// GetInstanceTypeIdOk returns a tuple with the InstanceTypeId field value
// and a boolean to check if the value has been set.
func (o *CreateClusterInstanceType) GetInstanceTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceTypeId, true
}

// SetInstanceTypeId sets field value
func (o *CreateClusterInstanceType) SetInstanceTypeId(v string) {
	o.InstanceTypeId = v
}

func (o CreateClusterInstanceType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["instanceTypeId"] = o.InstanceTypeId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateClusterInstanceType struct {
	value *CreateClusterInstanceType
	isSet bool
}

func (v NullableCreateClusterInstanceType) Get() *CreateClusterInstanceType {
	return v.value
}

func (v *NullableCreateClusterInstanceType) Set(val *CreateClusterInstanceType) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateClusterInstanceType) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateClusterInstanceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateClusterInstanceType(val *CreateClusterInstanceType) *NullableCreateClusterInstanceType {
	return &NullableCreateClusterInstanceType{value: val, isSet: true}
}

func (v NullableCreateClusterInstanceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateClusterInstanceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


