/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RunSearchForEvents200ResponsePaging struct for RunSearchForEvents200ResponsePaging
type RunSearchForEvents200ResponsePaging struct {
	NextPage float32 `json:"nextPage"`
	PreviousPage float32 `json:"previousPage"`
	TotalItems float32 `json:"totalItems"`
}

// NewRunSearchForEvents200ResponsePaging instantiates a new RunSearchForEvents200ResponsePaging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunSearchForEvents200ResponsePaging(nextPage float32, previousPage float32, totalItems float32) *RunSearchForEvents200ResponsePaging {
	this := RunSearchForEvents200ResponsePaging{}
	this.NextPage = nextPage
	this.PreviousPage = previousPage
	this.TotalItems = totalItems
	return &this
}

// NewRunSearchForEvents200ResponsePagingWithDefaults instantiates a new RunSearchForEvents200ResponsePaging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunSearchForEvents200ResponsePagingWithDefaults() *RunSearchForEvents200ResponsePaging {
	this := RunSearchForEvents200ResponsePaging{}
	return &this
}

// GetNextPage returns the NextPage field value
func (o *RunSearchForEvents200ResponsePaging) GetNextPage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NextPage
}

// GetNextPageOk returns a tuple with the NextPage field value
// and a boolean to check if the value has been set.
func (o *RunSearchForEvents200ResponsePaging) GetNextPageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NextPage, true
}

// SetNextPage sets field value
func (o *RunSearchForEvents200ResponsePaging) SetNextPage(v float32) {
	o.NextPage = v
}

// GetPreviousPage returns the PreviousPage field value
func (o *RunSearchForEvents200ResponsePaging) GetPreviousPage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PreviousPage
}

// GetPreviousPageOk returns a tuple with the PreviousPage field value
// and a boolean to check if the value has been set.
func (o *RunSearchForEvents200ResponsePaging) GetPreviousPageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreviousPage, true
}

// SetPreviousPage sets field value
func (o *RunSearchForEvents200ResponsePaging) SetPreviousPage(v float32) {
	o.PreviousPage = v
}

// GetTotalItems returns the TotalItems field value
func (o *RunSearchForEvents200ResponsePaging) GetTotalItems() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value
// and a boolean to check if the value has been set.
func (o *RunSearchForEvents200ResponsePaging) GetTotalItemsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalItems, true
}

// SetTotalItems sets field value
func (o *RunSearchForEvents200ResponsePaging) SetTotalItems(v float32) {
	o.TotalItems = v
}

func (o RunSearchForEvents200ResponsePaging) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["nextPage"] = o.NextPage
	}
	if true {
		toSerialize["previousPage"] = o.PreviousPage
	}
	if true {
		toSerialize["totalItems"] = o.TotalItems
	}
	return json.Marshal(toSerialize)
}

type NullableRunSearchForEvents200ResponsePaging struct {
	value *RunSearchForEvents200ResponsePaging
	isSet bool
}

func (v NullableRunSearchForEvents200ResponsePaging) Get() *RunSearchForEvents200ResponsePaging {
	return v.value
}

func (v *NullableRunSearchForEvents200ResponsePaging) Set(val *RunSearchForEvents200ResponsePaging) {
	v.value = val
	v.isSet = true
}

func (v NullableRunSearchForEvents200ResponsePaging) IsSet() bool {
	return v.isSet
}

func (v *NullableRunSearchForEvents200ResponsePaging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunSearchForEvents200ResponsePaging(val *RunSearchForEvents200ResponsePaging) *NullableRunSearchForEvents200ResponsePaging {
	return &NullableRunSearchForEvents200ResponsePaging{value: val, isSet: true}
}

func (v NullableRunSearchForEvents200ResponsePaging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunSearchForEvents200ResponsePaging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


