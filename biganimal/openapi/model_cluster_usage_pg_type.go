/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterUsagePgType struct for ClusterUsagePgType
type ClusterUsagePgType struct {
	PgTypeId string `json:"pgTypeId"`
	PgTypeName string `json:"pgTypeName"`
}

// NewClusterUsagePgType instantiates a new ClusterUsagePgType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterUsagePgType(pgTypeId string, pgTypeName string) *ClusterUsagePgType {
	this := ClusterUsagePgType{}
	this.PgTypeId = pgTypeId
	this.PgTypeName = pgTypeName
	return &this
}

// NewClusterUsagePgTypeWithDefaults instantiates a new ClusterUsagePgType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterUsagePgTypeWithDefaults() *ClusterUsagePgType {
	this := ClusterUsagePgType{}
	return &this
}

// GetPgTypeId returns the PgTypeId field value
func (o *ClusterUsagePgType) GetPgTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PgTypeId
}

// GetPgTypeIdOk returns a tuple with the PgTypeId field value
// and a boolean to check if the value has been set.
func (o *ClusterUsagePgType) GetPgTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PgTypeId, true
}

// SetPgTypeId sets field value
func (o *ClusterUsagePgType) SetPgTypeId(v string) {
	o.PgTypeId = v
}

// GetPgTypeName returns the PgTypeName field value
func (o *ClusterUsagePgType) GetPgTypeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PgTypeName
}

// GetPgTypeNameOk returns a tuple with the PgTypeName field value
// and a boolean to check if the value has been set.
func (o *ClusterUsagePgType) GetPgTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PgTypeName, true
}

// SetPgTypeName sets field value
func (o *ClusterUsagePgType) SetPgTypeName(v string) {
	o.PgTypeName = v
}

func (o ClusterUsagePgType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pgTypeId"] = o.PgTypeId
	}
	if true {
		toSerialize["pgTypeName"] = o.PgTypeName
	}
	return json.Marshal(toSerialize)
}

type NullableClusterUsagePgType struct {
	value *ClusterUsagePgType
	isSet bool
}

func (v NullableClusterUsagePgType) Get() *ClusterUsagePgType {
	return v.value
}

func (v *NullableClusterUsagePgType) Set(val *ClusterUsagePgType) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterUsagePgType) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterUsagePgType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterUsagePgType(val *ClusterUsagePgType) *NullableClusterUsagePgType {
	return &NullableClusterUsagePgType{value: val, isSet: true}
}

func (v NullableClusterUsagePgType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterUsagePgType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


