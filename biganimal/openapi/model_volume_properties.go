/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VolumeProperties struct for VolumeProperties
type VolumeProperties struct {
	VolumePropertiesId string `json:"volumePropertiesId"`
	VolumePropertiesName string `json:"volumePropertiesName"`
	MinDiskSize *string `json:"minDiskSize,omitempty"`
	MaxDiskSize *string `json:"maxDiskSize,omitempty"`
	MinIops *string `json:"minIops,omitempty"`
	MaxIops *string `json:"maxIops,omitempty"`
	DefaultIops *string `json:"defaultIops,omitempty"`
	MinThroughput *string `json:"minThroughput,omitempty"`
	MaxThroughput *string `json:"maxThroughput,omitempty"`
	DefaultThroughput *string `json:"defaultThroughput,omitempty"`
}

// NewVolumeProperties instantiates a new VolumeProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeProperties(volumePropertiesId string, volumePropertiesName string) *VolumeProperties {
	this := VolumeProperties{}
	this.VolumePropertiesId = volumePropertiesId
	this.VolumePropertiesName = volumePropertiesName
	return &this
}

// NewVolumePropertiesWithDefaults instantiates a new VolumeProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumePropertiesWithDefaults() *VolumeProperties {
	this := VolumeProperties{}
	return &this
}

// GetVolumePropertiesId returns the VolumePropertiesId field value
func (o *VolumeProperties) GetVolumePropertiesId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumePropertiesId
}

// GetVolumePropertiesIdOk returns a tuple with the VolumePropertiesId field value
// and a boolean to check if the value has been set.
func (o *VolumeProperties) GetVolumePropertiesIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumePropertiesId, true
}

// SetVolumePropertiesId sets field value
func (o *VolumeProperties) SetVolumePropertiesId(v string) {
	o.VolumePropertiesId = v
}

// GetVolumePropertiesName returns the VolumePropertiesName field value
func (o *VolumeProperties) GetVolumePropertiesName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumePropertiesName
}

// GetVolumePropertiesNameOk returns a tuple with the VolumePropertiesName field value
// and a boolean to check if the value has been set.
func (o *VolumeProperties) GetVolumePropertiesNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumePropertiesName, true
}

// SetVolumePropertiesName sets field value
func (o *VolumeProperties) SetVolumePropertiesName(v string) {
	o.VolumePropertiesName = v
}

// GetMinDiskSize returns the MinDiskSize field value if set, zero value otherwise.
func (o *VolumeProperties) GetMinDiskSize() string {
	if o == nil || o.MinDiskSize == nil {
		var ret string
		return ret
	}
	return *o.MinDiskSize
}

// GetMinDiskSizeOk returns a tuple with the MinDiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeProperties) GetMinDiskSizeOk() (*string, bool) {
	if o == nil || o.MinDiskSize == nil {
		return nil, false
	}
	return o.MinDiskSize, true
}

// HasMinDiskSize returns a boolean if a field has been set.
func (o *VolumeProperties) HasMinDiskSize() bool {
	if o != nil && o.MinDiskSize != nil {
		return true
	}

	return false
}

// SetMinDiskSize gets a reference to the given string and assigns it to the MinDiskSize field.
func (o *VolumeProperties) SetMinDiskSize(v string) {
	o.MinDiskSize = &v
}

// GetMaxDiskSize returns the MaxDiskSize field value if set, zero value otherwise.
func (o *VolumeProperties) GetMaxDiskSize() string {
	if o == nil || o.MaxDiskSize == nil {
		var ret string
		return ret
	}
	return *o.MaxDiskSize
}

// GetMaxDiskSizeOk returns a tuple with the MaxDiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeProperties) GetMaxDiskSizeOk() (*string, bool) {
	if o == nil || o.MaxDiskSize == nil {
		return nil, false
	}
	return o.MaxDiskSize, true
}

// HasMaxDiskSize returns a boolean if a field has been set.
func (o *VolumeProperties) HasMaxDiskSize() bool {
	if o != nil && o.MaxDiskSize != nil {
		return true
	}

	return false
}

// SetMaxDiskSize gets a reference to the given string and assigns it to the MaxDiskSize field.
func (o *VolumeProperties) SetMaxDiskSize(v string) {
	o.MaxDiskSize = &v
}

// GetMinIops returns the MinIops field value if set, zero value otherwise.
func (o *VolumeProperties) GetMinIops() string {
	if o == nil || o.MinIops == nil {
		var ret string
		return ret
	}
	return *o.MinIops
}

// GetMinIopsOk returns a tuple with the MinIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeProperties) GetMinIopsOk() (*string, bool) {
	if o == nil || o.MinIops == nil {
		return nil, false
	}
	return o.MinIops, true
}

// HasMinIops returns a boolean if a field has been set.
func (o *VolumeProperties) HasMinIops() bool {
	if o != nil && o.MinIops != nil {
		return true
	}

	return false
}

// SetMinIops gets a reference to the given string and assigns it to the MinIops field.
func (o *VolumeProperties) SetMinIops(v string) {
	o.MinIops = &v
}

// GetMaxIops returns the MaxIops field value if set, zero value otherwise.
func (o *VolumeProperties) GetMaxIops() string {
	if o == nil || o.MaxIops == nil {
		var ret string
		return ret
	}
	return *o.MaxIops
}

// GetMaxIopsOk returns a tuple with the MaxIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeProperties) GetMaxIopsOk() (*string, bool) {
	if o == nil || o.MaxIops == nil {
		return nil, false
	}
	return o.MaxIops, true
}

// HasMaxIops returns a boolean if a field has been set.
func (o *VolumeProperties) HasMaxIops() bool {
	if o != nil && o.MaxIops != nil {
		return true
	}

	return false
}

// SetMaxIops gets a reference to the given string and assigns it to the MaxIops field.
func (o *VolumeProperties) SetMaxIops(v string) {
	o.MaxIops = &v
}

// GetDefaultIops returns the DefaultIops field value if set, zero value otherwise.
func (o *VolumeProperties) GetDefaultIops() string {
	if o == nil || o.DefaultIops == nil {
		var ret string
		return ret
	}
	return *o.DefaultIops
}

// GetDefaultIopsOk returns a tuple with the DefaultIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeProperties) GetDefaultIopsOk() (*string, bool) {
	if o == nil || o.DefaultIops == nil {
		return nil, false
	}
	return o.DefaultIops, true
}

// HasDefaultIops returns a boolean if a field has been set.
func (o *VolumeProperties) HasDefaultIops() bool {
	if o != nil && o.DefaultIops != nil {
		return true
	}

	return false
}

// SetDefaultIops gets a reference to the given string and assigns it to the DefaultIops field.
func (o *VolumeProperties) SetDefaultIops(v string) {
	o.DefaultIops = &v
}

// GetMinThroughput returns the MinThroughput field value if set, zero value otherwise.
func (o *VolumeProperties) GetMinThroughput() string {
	if o == nil || o.MinThroughput == nil {
		var ret string
		return ret
	}
	return *o.MinThroughput
}

// GetMinThroughputOk returns a tuple with the MinThroughput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeProperties) GetMinThroughputOk() (*string, bool) {
	if o == nil || o.MinThroughput == nil {
		return nil, false
	}
	return o.MinThroughput, true
}

// HasMinThroughput returns a boolean if a field has been set.
func (o *VolumeProperties) HasMinThroughput() bool {
	if o != nil && o.MinThroughput != nil {
		return true
	}

	return false
}

// SetMinThroughput gets a reference to the given string and assigns it to the MinThroughput field.
func (o *VolumeProperties) SetMinThroughput(v string) {
	o.MinThroughput = &v
}

// GetMaxThroughput returns the MaxThroughput field value if set, zero value otherwise.
func (o *VolumeProperties) GetMaxThroughput() string {
	if o == nil || o.MaxThroughput == nil {
		var ret string
		return ret
	}
	return *o.MaxThroughput
}

// GetMaxThroughputOk returns a tuple with the MaxThroughput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeProperties) GetMaxThroughputOk() (*string, bool) {
	if o == nil || o.MaxThroughput == nil {
		return nil, false
	}
	return o.MaxThroughput, true
}

// HasMaxThroughput returns a boolean if a field has been set.
func (o *VolumeProperties) HasMaxThroughput() bool {
	if o != nil && o.MaxThroughput != nil {
		return true
	}

	return false
}

// SetMaxThroughput gets a reference to the given string and assigns it to the MaxThroughput field.
func (o *VolumeProperties) SetMaxThroughput(v string) {
	o.MaxThroughput = &v
}

// GetDefaultThroughput returns the DefaultThroughput field value if set, zero value otherwise.
func (o *VolumeProperties) GetDefaultThroughput() string {
	if o == nil || o.DefaultThroughput == nil {
		var ret string
		return ret
	}
	return *o.DefaultThroughput
}

// GetDefaultThroughputOk returns a tuple with the DefaultThroughput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeProperties) GetDefaultThroughputOk() (*string, bool) {
	if o == nil || o.DefaultThroughput == nil {
		return nil, false
	}
	return o.DefaultThroughput, true
}

// HasDefaultThroughput returns a boolean if a field has been set.
func (o *VolumeProperties) HasDefaultThroughput() bool {
	if o != nil && o.DefaultThroughput != nil {
		return true
	}

	return false
}

// SetDefaultThroughput gets a reference to the given string and assigns it to the DefaultThroughput field.
func (o *VolumeProperties) SetDefaultThroughput(v string) {
	o.DefaultThroughput = &v
}

func (o VolumeProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["volumePropertiesId"] = o.VolumePropertiesId
	}
	if true {
		toSerialize["volumePropertiesName"] = o.VolumePropertiesName
	}
	if o.MinDiskSize != nil {
		toSerialize["minDiskSize"] = o.MinDiskSize
	}
	if o.MaxDiskSize != nil {
		toSerialize["maxDiskSize"] = o.MaxDiskSize
	}
	if o.MinIops != nil {
		toSerialize["minIops"] = o.MinIops
	}
	if o.MaxIops != nil {
		toSerialize["maxIops"] = o.MaxIops
	}
	if o.DefaultIops != nil {
		toSerialize["defaultIops"] = o.DefaultIops
	}
	if o.MinThroughput != nil {
		toSerialize["minThroughput"] = o.MinThroughput
	}
	if o.MaxThroughput != nil {
		toSerialize["maxThroughput"] = o.MaxThroughput
	}
	if o.DefaultThroughput != nil {
		toSerialize["defaultThroughput"] = o.DefaultThroughput
	}
	return json.Marshal(toSerialize)
}

type NullableVolumeProperties struct {
	value *VolumeProperties
	isSet bool
}

func (v NullableVolumeProperties) Get() *VolumeProperties {
	return v.value
}

func (v *NullableVolumeProperties) Set(val *VolumeProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeProperties(val *VolumeProperties) *NullableVolumeProperties {
	return &NullableVolumeProperties{value: val, isSet: true}
}

func (v NullableVolumeProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


