/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterEstate struct for ClusterEstate
type ClusterEstate struct {
	OrganizationId string `json:"organizationId"`
	CloudProviderId string `json:"cloudProviderId"`
	CloudProviderName string `json:"cloudProviderName"`
	ClusterRegions []ClusterEstateClusterRegionsInner `json:"clusterRegions"`
}

// NewClusterEstate instantiates a new ClusterEstate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterEstate(organizationId string, cloudProviderId string, cloudProviderName string, clusterRegions []ClusterEstateClusterRegionsInner) *ClusterEstate {
	this := ClusterEstate{}
	this.OrganizationId = organizationId
	this.CloudProviderId = cloudProviderId
	this.CloudProviderName = cloudProviderName
	this.ClusterRegions = clusterRegions
	return &this
}

// NewClusterEstateWithDefaults instantiates a new ClusterEstate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterEstateWithDefaults() *ClusterEstate {
	this := ClusterEstate{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value
func (o *ClusterEstate) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *ClusterEstate) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *ClusterEstate) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetCloudProviderId returns the CloudProviderId field value
func (o *ClusterEstate) GetCloudProviderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProviderId
}

// GetCloudProviderIdOk returns a tuple with the CloudProviderId field value
// and a boolean to check if the value has been set.
func (o *ClusterEstate) GetCloudProviderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProviderId, true
}

// SetCloudProviderId sets field value
func (o *ClusterEstate) SetCloudProviderId(v string) {
	o.CloudProviderId = v
}

// GetCloudProviderName returns the CloudProviderName field value
func (o *ClusterEstate) GetCloudProviderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProviderName
}

// GetCloudProviderNameOk returns a tuple with the CloudProviderName field value
// and a boolean to check if the value has been set.
func (o *ClusterEstate) GetCloudProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProviderName, true
}

// SetCloudProviderName sets field value
func (o *ClusterEstate) SetCloudProviderName(v string) {
	o.CloudProviderName = v
}

// GetClusterRegions returns the ClusterRegions field value
func (o *ClusterEstate) GetClusterRegions() []ClusterEstateClusterRegionsInner {
	if o == nil {
		var ret []ClusterEstateClusterRegionsInner
		return ret
	}

	return o.ClusterRegions
}

// GetClusterRegionsOk returns a tuple with the ClusterRegions field value
// and a boolean to check if the value has been set.
func (o *ClusterEstate) GetClusterRegionsOk() ([]ClusterEstateClusterRegionsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterRegions, true
}

// SetClusterRegions sets field value
func (o *ClusterEstate) SetClusterRegions(v []ClusterEstateClusterRegionsInner) {
	o.ClusterRegions = v
}

func (o ClusterEstate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if true {
		toSerialize["cloudProviderId"] = o.CloudProviderId
	}
	if true {
		toSerialize["cloudProviderName"] = o.CloudProviderName
	}
	if true {
		toSerialize["clusterRegions"] = o.ClusterRegions
	}
	return json.Marshal(toSerialize)
}

type NullableClusterEstate struct {
	value *ClusterEstate
	isSet bool
}

func (v NullableClusterEstate) Get() *ClusterEstate {
	return v.value
}

func (v *NullableClusterEstate) Set(val *ClusterEstate) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterEstate) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterEstate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterEstate(val *ClusterEstate) *NullableClusterEstate {
	return &NullableClusterEstate{value: val, isSet: true}
}

func (v NullableClusterEstate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterEstate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


