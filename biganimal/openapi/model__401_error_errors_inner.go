/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1.

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Error401ErrorsInner struct for Error401ErrorsInner
type Error401ErrorsInner struct {
	Path *string `json:"path,omitempty"`
	Message *string `json:"message,omitempty"`
	ErrorCode *string `json:"errorCode,omitempty"`
}

// NewError401ErrorsInner instantiates a new Error401ErrorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewError401ErrorsInner() *Error401ErrorsInner {
	this := Error401ErrorsInner{}
	return &this
}

// NewError401ErrorsInnerWithDefaults instantiates a new Error401ErrorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewError401ErrorsInnerWithDefaults() *Error401ErrorsInner {
	this := Error401ErrorsInner{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *Error401ErrorsInner) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Error401ErrorsInner) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *Error401ErrorsInner) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *Error401ErrorsInner) SetPath(v string) {
	o.Path = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *Error401ErrorsInner) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Error401ErrorsInner) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *Error401ErrorsInner) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *Error401ErrorsInner) SetMessage(v string) {
	o.Message = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *Error401ErrorsInner) GetErrorCode() string {
	if o == nil || o.ErrorCode == nil {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Error401ErrorsInner) GetErrorCodeOk() (*string, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *Error401ErrorsInner) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *Error401ErrorsInner) SetErrorCode(v string) {
	o.ErrorCode = &v
}

func (o Error401ErrorsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.ErrorCode != nil {
		toSerialize["errorCode"] = o.ErrorCode
	}
	return json.Marshal(toSerialize)
}

type NullableError401ErrorsInner struct {
	value *Error401ErrorsInner
	isSet bool
}

func (v NullableError401ErrorsInner) Get() *Error401ErrorsInner {
	return v.value
}

func (v *NullableError401ErrorsInner) Set(val *Error401ErrorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableError401ErrorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableError401ErrorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableError401ErrorsInner(val *Error401ErrorsInner) *NullableError401ErrorsInner {
	return &NullableError401ErrorsInner{value: val, isSet: true}
}

func (v NullableError401ErrorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableError401ErrorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


