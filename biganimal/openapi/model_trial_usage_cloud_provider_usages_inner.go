/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TrialUsageCloudProviderUsagesInner struct for TrialUsageCloudProviderUsagesInner
type TrialUsageCloudProviderUsagesInner struct {
	OrgId *string `json:"orgId,omitempty"`
	CloudProviderId *string `json:"cloudProviderId,omitempty"`
	CloudProviderName *string `json:"cloudProviderName,omitempty"`
	ExpireAt *PointInTime `json:"expireAt,omitempty"`
	ClusterUsages []TrialUsageCloudProviderUsagesInnerClusterUsagesInner `json:"clusterUsages,omitempty"`
}

// NewTrialUsageCloudProviderUsagesInner instantiates a new TrialUsageCloudProviderUsagesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrialUsageCloudProviderUsagesInner() *TrialUsageCloudProviderUsagesInner {
	this := TrialUsageCloudProviderUsagesInner{}
	return &this
}

// NewTrialUsageCloudProviderUsagesInnerWithDefaults instantiates a new TrialUsageCloudProviderUsagesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrialUsageCloudProviderUsagesInnerWithDefaults() *TrialUsageCloudProviderUsagesInner {
	this := TrialUsageCloudProviderUsagesInner{}
	return &this
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *TrialUsageCloudProviderUsagesInner) GetOrgId() string {
	if o == nil || o.OrgId == nil {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialUsageCloudProviderUsagesInner) GetOrgIdOk() (*string, bool) {
	if o == nil || o.OrgId == nil {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *TrialUsageCloudProviderUsagesInner) HasOrgId() bool {
	if o != nil && o.OrgId != nil {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *TrialUsageCloudProviderUsagesInner) SetOrgId(v string) {
	o.OrgId = &v
}

// GetCloudProviderId returns the CloudProviderId field value if set, zero value otherwise.
func (o *TrialUsageCloudProviderUsagesInner) GetCloudProviderId() string {
	if o == nil || o.CloudProviderId == nil {
		var ret string
		return ret
	}
	return *o.CloudProviderId
}

// GetCloudProviderIdOk returns a tuple with the CloudProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialUsageCloudProviderUsagesInner) GetCloudProviderIdOk() (*string, bool) {
	if o == nil || o.CloudProviderId == nil {
		return nil, false
	}
	return o.CloudProviderId, true
}

// HasCloudProviderId returns a boolean if a field has been set.
func (o *TrialUsageCloudProviderUsagesInner) HasCloudProviderId() bool {
	if o != nil && o.CloudProviderId != nil {
		return true
	}

	return false
}

// SetCloudProviderId gets a reference to the given string and assigns it to the CloudProviderId field.
func (o *TrialUsageCloudProviderUsagesInner) SetCloudProviderId(v string) {
	o.CloudProviderId = &v
}

// GetCloudProviderName returns the CloudProviderName field value if set, zero value otherwise.
func (o *TrialUsageCloudProviderUsagesInner) GetCloudProviderName() string {
	if o == nil || o.CloudProviderName == nil {
		var ret string
		return ret
	}
	return *o.CloudProviderName
}

// GetCloudProviderNameOk returns a tuple with the CloudProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialUsageCloudProviderUsagesInner) GetCloudProviderNameOk() (*string, bool) {
	if o == nil || o.CloudProviderName == nil {
		return nil, false
	}
	return o.CloudProviderName, true
}

// HasCloudProviderName returns a boolean if a field has been set.
func (o *TrialUsageCloudProviderUsagesInner) HasCloudProviderName() bool {
	if o != nil && o.CloudProviderName != nil {
		return true
	}

	return false
}

// SetCloudProviderName gets a reference to the given string and assigns it to the CloudProviderName field.
func (o *TrialUsageCloudProviderUsagesInner) SetCloudProviderName(v string) {
	o.CloudProviderName = &v
}

// GetExpireAt returns the ExpireAt field value if set, zero value otherwise.
func (o *TrialUsageCloudProviderUsagesInner) GetExpireAt() PointInTime {
	if o == nil || o.ExpireAt == nil {
		var ret PointInTime
		return ret
	}
	return *o.ExpireAt
}

// GetExpireAtOk returns a tuple with the ExpireAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialUsageCloudProviderUsagesInner) GetExpireAtOk() (*PointInTime, bool) {
	if o == nil || o.ExpireAt == nil {
		return nil, false
	}
	return o.ExpireAt, true
}

// HasExpireAt returns a boolean if a field has been set.
func (o *TrialUsageCloudProviderUsagesInner) HasExpireAt() bool {
	if o != nil && o.ExpireAt != nil {
		return true
	}

	return false
}

// SetExpireAt gets a reference to the given PointInTime and assigns it to the ExpireAt field.
func (o *TrialUsageCloudProviderUsagesInner) SetExpireAt(v PointInTime) {
	o.ExpireAt = &v
}

// GetClusterUsages returns the ClusterUsages field value if set, zero value otherwise.
func (o *TrialUsageCloudProviderUsagesInner) GetClusterUsages() []TrialUsageCloudProviderUsagesInnerClusterUsagesInner {
	if o == nil || o.ClusterUsages == nil {
		var ret []TrialUsageCloudProviderUsagesInnerClusterUsagesInner
		return ret
	}
	return o.ClusterUsages
}

// GetClusterUsagesOk returns a tuple with the ClusterUsages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrialUsageCloudProviderUsagesInner) GetClusterUsagesOk() ([]TrialUsageCloudProviderUsagesInnerClusterUsagesInner, bool) {
	if o == nil || o.ClusterUsages == nil {
		return nil, false
	}
	return o.ClusterUsages, true
}

// HasClusterUsages returns a boolean if a field has been set.
func (o *TrialUsageCloudProviderUsagesInner) HasClusterUsages() bool {
	if o != nil && o.ClusterUsages != nil {
		return true
	}

	return false
}

// SetClusterUsages gets a reference to the given []TrialUsageCloudProviderUsagesInnerClusterUsagesInner and assigns it to the ClusterUsages field.
func (o *TrialUsageCloudProviderUsagesInner) SetClusterUsages(v []TrialUsageCloudProviderUsagesInnerClusterUsagesInner) {
	o.ClusterUsages = v
}

func (o TrialUsageCloudProviderUsagesInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OrgId != nil {
		toSerialize["orgId"] = o.OrgId
	}
	if o.CloudProviderId != nil {
		toSerialize["cloudProviderId"] = o.CloudProviderId
	}
	if o.CloudProviderName != nil {
		toSerialize["cloudProviderName"] = o.CloudProviderName
	}
	if o.ExpireAt != nil {
		toSerialize["expireAt"] = o.ExpireAt
	}
	if o.ClusterUsages != nil {
		toSerialize["clusterUsages"] = o.ClusterUsages
	}
	return json.Marshal(toSerialize)
}

type NullableTrialUsageCloudProviderUsagesInner struct {
	value *TrialUsageCloudProviderUsagesInner
	isSet bool
}

func (v NullableTrialUsageCloudProviderUsagesInner) Get() *TrialUsageCloudProviderUsagesInner {
	return v.value
}

func (v *NullableTrialUsageCloudProviderUsagesInner) Set(val *TrialUsageCloudProviderUsagesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTrialUsageCloudProviderUsagesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTrialUsageCloudProviderUsagesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrialUsageCloudProviderUsagesInner(val *TrialUsageCloudProviderUsagesInner) *NullableTrialUsageCloudProviderUsagesInner {
	return &NullableTrialUsageCloudProviderUsagesInner{value: val, isSet: true}
}

func (v NullableTrialUsageCloudProviderUsagesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrialUsageCloudProviderUsagesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


