/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetSubscriptionById200Response struct for GetSubscriptionById200Response
type GetSubscriptionById200Response struct {
	Id *string `json:"id,omitempty"`
	SfId *string `json:"sfId,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	Code *string `json:"code,omitempty"`
	DomainNames []string `json:"domainNames,omitempty"`
	Description *string `json:"description,omitempty"`
	Status *string `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetSubscriptionById200Response GetSubscriptionById200Response

// NewGetSubscriptionById200Response instantiates a new GetSubscriptionById200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSubscriptionById200Response() *GetSubscriptionById200Response {
	this := GetSubscriptionById200Response{}
	return &this
}

// NewGetSubscriptionById200ResponseWithDefaults instantiates a new GetSubscriptionById200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSubscriptionById200ResponseWithDefaults() *GetSubscriptionById200Response {
	this := GetSubscriptionById200Response{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetSubscriptionById200Response) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubscriptionById200Response) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetSubscriptionById200Response) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetSubscriptionById200Response) SetId(v string) {
	o.Id = &v
}

// GetSfId returns the SfId field value if set, zero value otherwise.
func (o *GetSubscriptionById200Response) GetSfId() string {
	if o == nil || o.SfId == nil {
		var ret string
		return ret
	}
	return *o.SfId
}

// GetSfIdOk returns a tuple with the SfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubscriptionById200Response) GetSfIdOk() (*string, bool) {
	if o == nil || o.SfId == nil {
		return nil, false
	}
	return o.SfId, true
}

// HasSfId returns a boolean if a field has been set.
func (o *GetSubscriptionById200Response) HasSfId() bool {
	if o != nil && o.SfId != nil {
		return true
	}

	return false
}

// SetSfId gets a reference to the given string and assigns it to the SfId field.
func (o *GetSubscriptionById200Response) SetSfId(v string) {
	o.SfId = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *GetSubscriptionById200Response) GetOrganizationName() string {
	if o == nil || o.OrganizationName == nil {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubscriptionById200Response) GetOrganizationNameOk() (*string, bool) {
	if o == nil || o.OrganizationName == nil {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *GetSubscriptionById200Response) HasOrganizationName() bool {
	if o != nil && o.OrganizationName != nil {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *GetSubscriptionById200Response) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *GetSubscriptionById200Response) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubscriptionById200Response) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *GetSubscriptionById200Response) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *GetSubscriptionById200Response) SetCode(v string) {
	o.Code = &v
}

// GetDomainNames returns the DomainNames field value if set, zero value otherwise.
func (o *GetSubscriptionById200Response) GetDomainNames() []string {
	if o == nil || o.DomainNames == nil {
		var ret []string
		return ret
	}
	return o.DomainNames
}

// GetDomainNamesOk returns a tuple with the DomainNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubscriptionById200Response) GetDomainNamesOk() ([]string, bool) {
	if o == nil || o.DomainNames == nil {
		return nil, false
	}
	return o.DomainNames, true
}

// HasDomainNames returns a boolean if a field has been set.
func (o *GetSubscriptionById200Response) HasDomainNames() bool {
	if o != nil && o.DomainNames != nil {
		return true
	}

	return false
}

// SetDomainNames gets a reference to the given []string and assigns it to the DomainNames field.
func (o *GetSubscriptionById200Response) SetDomainNames(v []string) {
	o.DomainNames = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetSubscriptionById200Response) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubscriptionById200Response) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetSubscriptionById200Response) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetSubscriptionById200Response) SetDescription(v string) {
	o.Description = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetSubscriptionById200Response) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubscriptionById200Response) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetSubscriptionById200Response) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetSubscriptionById200Response) SetStatus(v string) {
	o.Status = &v
}

func (o GetSubscriptionById200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.SfId != nil {
		toSerialize["sfId"] = o.SfId
	}
	if o.OrganizationName != nil {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.DomainNames != nil {
		toSerialize["domainNames"] = o.DomainNames
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *GetSubscriptionById200Response) UnmarshalJSON(bytes []byte) (err error) {
	varGetSubscriptionById200Response := _GetSubscriptionById200Response{}

	if err = json.Unmarshal(bytes, &varGetSubscriptionById200Response); err == nil {
		*o = GetSubscriptionById200Response(varGetSubscriptionById200Response)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "sfId")
		delete(additionalProperties, "organizationName")
		delete(additionalProperties, "code")
		delete(additionalProperties, "domainNames")
		delete(additionalProperties, "description")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetSubscriptionById200Response struct {
	value *GetSubscriptionById200Response
	isSet bool
}

func (v NullableGetSubscriptionById200Response) Get() *GetSubscriptionById200Response {
	return v.value
}

func (v *NullableGetSubscriptionById200Response) Set(val *GetSubscriptionById200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSubscriptionById200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSubscriptionById200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSubscriptionById200Response(val *GetSubscriptionById200Response) *NullableGetSubscriptionById200Response {
	return &NullableGetSubscriptionById200Response{value: val, isSet: true}
}

func (v NullableGetSubscriptionById200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSubscriptionById200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


