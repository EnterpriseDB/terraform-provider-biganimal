/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterConnection struct for ClusterConnection
type ClusterConnection struct {
	DatabaseName string `json:"databaseName"`
	PgUri *string `json:"pgUri,omitempty"`
	Port string `json:"port"`
	ReadOnlyPgUri *string `json:"readOnlyPgUri,omitempty"`
	ReadOnlyPort *string `json:"readOnlyPort,omitempty"`
	ReadOnlyServiceName *string `json:"readOnlyServiceName,omitempty"`
	ServiceName string `json:"serviceName"`
	Username string `json:"username"`
	AdditionalProperties map[string]interface{}
}

type _ClusterConnection ClusterConnection

// NewClusterConnection instantiates a new ClusterConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterConnection(databaseName string, port string, serviceName string, username string) *ClusterConnection {
	this := ClusterConnection{}
	this.DatabaseName = databaseName
	this.Port = port
	this.ServiceName = serviceName
	this.Username = username
	return &this
}

// NewClusterConnectionWithDefaults instantiates a new ClusterConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterConnectionWithDefaults() *ClusterConnection {
	this := ClusterConnection{}
	return &this
}

// GetDatabaseName returns the DatabaseName field value
func (o *ClusterConnection) GetDatabaseName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DatabaseName
}

// GetDatabaseNameOk returns a tuple with the DatabaseName field value
// and a boolean to check if the value has been set.
func (o *ClusterConnection) GetDatabaseNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatabaseName, true
}

// SetDatabaseName sets field value
func (o *ClusterConnection) SetDatabaseName(v string) {
	o.DatabaseName = v
}

// GetPgUri returns the PgUri field value if set, zero value otherwise.
func (o *ClusterConnection) GetPgUri() string {
	if o == nil || o.PgUri == nil {
		var ret string
		return ret
	}
	return *o.PgUri
}

// GetPgUriOk returns a tuple with the PgUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterConnection) GetPgUriOk() (*string, bool) {
	if o == nil || o.PgUri == nil {
		return nil, false
	}
	return o.PgUri, true
}

// HasPgUri returns a boolean if a field has been set.
func (o *ClusterConnection) HasPgUri() bool {
	if o != nil && o.PgUri != nil {
		return true
	}

	return false
}

// SetPgUri gets a reference to the given string and assigns it to the PgUri field.
func (o *ClusterConnection) SetPgUri(v string) {
	o.PgUri = &v
}

// GetPort returns the Port field value
func (o *ClusterConnection) GetPort() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *ClusterConnection) GetPortOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *ClusterConnection) SetPort(v string) {
	o.Port = v
}

// GetReadOnlyPgUri returns the ReadOnlyPgUri field value if set, zero value otherwise.
func (o *ClusterConnection) GetReadOnlyPgUri() string {
	if o == nil || o.ReadOnlyPgUri == nil {
		var ret string
		return ret
	}
	return *o.ReadOnlyPgUri
}

// GetReadOnlyPgUriOk returns a tuple with the ReadOnlyPgUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterConnection) GetReadOnlyPgUriOk() (*string, bool) {
	if o == nil || o.ReadOnlyPgUri == nil {
		return nil, false
	}
	return o.ReadOnlyPgUri, true
}

// HasReadOnlyPgUri returns a boolean if a field has been set.
func (o *ClusterConnection) HasReadOnlyPgUri() bool {
	if o != nil && o.ReadOnlyPgUri != nil {
		return true
	}

	return false
}

// SetReadOnlyPgUri gets a reference to the given string and assigns it to the ReadOnlyPgUri field.
func (o *ClusterConnection) SetReadOnlyPgUri(v string) {
	o.ReadOnlyPgUri = &v
}

// GetReadOnlyPort returns the ReadOnlyPort field value if set, zero value otherwise.
func (o *ClusterConnection) GetReadOnlyPort() string {
	if o == nil || o.ReadOnlyPort == nil {
		var ret string
		return ret
	}
	return *o.ReadOnlyPort
}

// GetReadOnlyPortOk returns a tuple with the ReadOnlyPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterConnection) GetReadOnlyPortOk() (*string, bool) {
	if o == nil || o.ReadOnlyPort == nil {
		return nil, false
	}
	return o.ReadOnlyPort, true
}

// HasReadOnlyPort returns a boolean if a field has been set.
func (o *ClusterConnection) HasReadOnlyPort() bool {
	if o != nil && o.ReadOnlyPort != nil {
		return true
	}

	return false
}

// SetReadOnlyPort gets a reference to the given string and assigns it to the ReadOnlyPort field.
func (o *ClusterConnection) SetReadOnlyPort(v string) {
	o.ReadOnlyPort = &v
}

// GetReadOnlyServiceName returns the ReadOnlyServiceName field value if set, zero value otherwise.
func (o *ClusterConnection) GetReadOnlyServiceName() string {
	if o == nil || o.ReadOnlyServiceName == nil {
		var ret string
		return ret
	}
	return *o.ReadOnlyServiceName
}

// GetReadOnlyServiceNameOk returns a tuple with the ReadOnlyServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterConnection) GetReadOnlyServiceNameOk() (*string, bool) {
	if o == nil || o.ReadOnlyServiceName == nil {
		return nil, false
	}
	return o.ReadOnlyServiceName, true
}

// HasReadOnlyServiceName returns a boolean if a field has been set.
func (o *ClusterConnection) HasReadOnlyServiceName() bool {
	if o != nil && o.ReadOnlyServiceName != nil {
		return true
	}

	return false
}

// SetReadOnlyServiceName gets a reference to the given string and assigns it to the ReadOnlyServiceName field.
func (o *ClusterConnection) SetReadOnlyServiceName(v string) {
	o.ReadOnlyServiceName = &v
}

// GetServiceName returns the ServiceName field value
func (o *ClusterConnection) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *ClusterConnection) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *ClusterConnection) SetServiceName(v string) {
	o.ServiceName = v
}

// GetUsername returns the Username field value
func (o *ClusterConnection) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *ClusterConnection) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *ClusterConnection) SetUsername(v string) {
	o.Username = v
}

func (o ClusterConnection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["databaseName"] = o.DatabaseName
	}
	if o.PgUri != nil {
		toSerialize["pgUri"] = o.PgUri
	}
	if true {
		toSerialize["port"] = o.Port
	}
	if o.ReadOnlyPgUri != nil {
		toSerialize["readOnlyPgUri"] = o.ReadOnlyPgUri
	}
	if o.ReadOnlyPort != nil {
		toSerialize["readOnlyPort"] = o.ReadOnlyPort
	}
	if o.ReadOnlyServiceName != nil {
		toSerialize["readOnlyServiceName"] = o.ReadOnlyServiceName
	}
	if true {
		toSerialize["serviceName"] = o.ServiceName
	}
	if true {
		toSerialize["username"] = o.Username
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ClusterConnection) UnmarshalJSON(bytes []byte) (err error) {
	varClusterConnection := _ClusterConnection{}

	if err = json.Unmarshal(bytes, &varClusterConnection); err == nil {
		*o = ClusterConnection(varClusterConnection)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "databaseName")
		delete(additionalProperties, "pgUri")
		delete(additionalProperties, "port")
		delete(additionalProperties, "readOnlyPgUri")
		delete(additionalProperties, "readOnlyPort")
		delete(additionalProperties, "readOnlyServiceName")
		delete(additionalProperties, "serviceName")
		delete(additionalProperties, "username")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClusterConnection struct {
	value *ClusterConnection
	isSet bool
}

func (v NullableClusterConnection) Get() *ClusterConnection {
	return v.value
}

func (v *NullableClusterConnection) Set(val *ClusterConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterConnection(val *ClusterConnection) *NullableClusterConnection {
	return &NullableClusterConnection{value: val, isSet: true}
}

func (v NullableClusterConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


