/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterUsageClusterArchitecture struct for ClusterUsageClusterArchitecture
type ClusterUsageClusterArchitecture struct {
	ClusterArchitectureId *string `json:"clusterArchitectureId,omitempty"`
	ClusterArchitectureName *string `json:"clusterArchitectureName,omitempty"`
}

// NewClusterUsageClusterArchitecture instantiates a new ClusterUsageClusterArchitecture object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterUsageClusterArchitecture() *ClusterUsageClusterArchitecture {
	this := ClusterUsageClusterArchitecture{}
	return &this
}

// NewClusterUsageClusterArchitectureWithDefaults instantiates a new ClusterUsageClusterArchitecture object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterUsageClusterArchitectureWithDefaults() *ClusterUsageClusterArchitecture {
	this := ClusterUsageClusterArchitecture{}
	return &this
}

// GetClusterArchitectureId returns the ClusterArchitectureId field value if set, zero value otherwise.
func (o *ClusterUsageClusterArchitecture) GetClusterArchitectureId() string {
	if o == nil || o.ClusterArchitectureId == nil {
		var ret string
		return ret
	}
	return *o.ClusterArchitectureId
}

// GetClusterArchitectureIdOk returns a tuple with the ClusterArchitectureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUsageClusterArchitecture) GetClusterArchitectureIdOk() (*string, bool) {
	if o == nil || o.ClusterArchitectureId == nil {
		return nil, false
	}
	return o.ClusterArchitectureId, true
}

// HasClusterArchitectureId returns a boolean if a field has been set.
func (o *ClusterUsageClusterArchitecture) HasClusterArchitectureId() bool {
	if o != nil && o.ClusterArchitectureId != nil {
		return true
	}

	return false
}

// SetClusterArchitectureId gets a reference to the given string and assigns it to the ClusterArchitectureId field.
func (o *ClusterUsageClusterArchitecture) SetClusterArchitectureId(v string) {
	o.ClusterArchitectureId = &v
}

// GetClusterArchitectureName returns the ClusterArchitectureName field value if set, zero value otherwise.
func (o *ClusterUsageClusterArchitecture) GetClusterArchitectureName() string {
	if o == nil || o.ClusterArchitectureName == nil {
		var ret string
		return ret
	}
	return *o.ClusterArchitectureName
}

// GetClusterArchitectureNameOk returns a tuple with the ClusterArchitectureName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUsageClusterArchitecture) GetClusterArchitectureNameOk() (*string, bool) {
	if o == nil || o.ClusterArchitectureName == nil {
		return nil, false
	}
	return o.ClusterArchitectureName, true
}

// HasClusterArchitectureName returns a boolean if a field has been set.
func (o *ClusterUsageClusterArchitecture) HasClusterArchitectureName() bool {
	if o != nil && o.ClusterArchitectureName != nil {
		return true
	}

	return false
}

// SetClusterArchitectureName gets a reference to the given string and assigns it to the ClusterArchitectureName field.
func (o *ClusterUsageClusterArchitecture) SetClusterArchitectureName(v string) {
	o.ClusterArchitectureName = &v
}

func (o ClusterUsageClusterArchitecture) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterArchitectureId != nil {
		toSerialize["clusterArchitectureId"] = o.ClusterArchitectureId
	}
	if o.ClusterArchitectureName != nil {
		toSerialize["clusterArchitectureName"] = o.ClusterArchitectureName
	}
	return json.Marshal(toSerialize)
}

type NullableClusterUsageClusterArchitecture struct {
	value *ClusterUsageClusterArchitecture
	isSet bool
}

func (v NullableClusterUsageClusterArchitecture) Get() *ClusterUsageClusterArchitecture {
	return v.value
}

func (v *NullableClusterUsageClusterArchitecture) Set(val *ClusterUsageClusterArchitecture) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterUsageClusterArchitecture) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterUsageClusterArchitecture) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterUsageClusterArchitecture(val *ClusterUsageClusterArchitecture) *NullableClusterUsageClusterArchitecture {
	return &NullableClusterUsageClusterArchitecture{value: val, isSet: true}
}

func (v NullableClusterUsageClusterArchitecture) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterUsageClusterArchitecture) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


