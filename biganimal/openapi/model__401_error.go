/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// 401Error struct for 401Error
type 401Error struct {
	Status float32 `json:"status"`
	Message string `json:"message"`
	Errors []Model401ErrorErrorsInner `json:"errors,omitempty"`
	Reference string `json:"reference"`
	Source *string `json:"source,omitempty"`
}

// New401Error instantiates a new 401Error object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func New401Error(status float32, message string, reference string) *401Error {
	this := 401Error{}
	this.Status = status
	this.Message = message
	this.Reference = reference
	return &this
}

// New401ErrorWithDefaults instantiates a new 401Error object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func New401ErrorWithDefaults() *401Error {
	this := 401Error{}
	return &this
}

// GetStatus returns the Status field value
func (o *401Error) GetStatus() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *401Error) GetStatusOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *401Error) SetStatus(v float32) {
	o.Status = v
}

// GetMessage returns the Message field value
func (o *401Error) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *401Error) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *401Error) SetMessage(v string) {
	o.Message = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *401Error) GetErrors() []Model401ErrorErrorsInner {
	if o == nil || o.Errors == nil {
		var ret []Model401ErrorErrorsInner
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *401Error) GetErrorsOk() ([]Model401ErrorErrorsInner, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *401Error) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []Model401ErrorErrorsInner and assigns it to the Errors field.
func (o *401Error) SetErrors(v []Model401ErrorErrorsInner) {
	o.Errors = v
}

// GetReference returns the Reference field value
func (o *401Error) GetReference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value
// and a boolean to check if the value has been set.
func (o *401Error) GetReferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reference, true
}

// SetReference sets field value
func (o *401Error) SetReference(v string) {
	o.Reference = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *401Error) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *401Error) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *401Error) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *401Error) SetSource(v string) {
	o.Source = &v
}

func (o 401Error) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["message"] = o.Message
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if true {
		toSerialize["reference"] = o.Reference
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	return json.Marshal(toSerialize)
}

type Nullable401Error struct {
	value *401Error
	isSet bool
}

func (v Nullable401Error) Get() *401Error {
	return v.value
}

func (v *Nullable401Error) Set(val *401Error) {
	v.value = val
	v.isSet = true
}

func (v Nullable401Error) IsSet() bool {
	return v.isSet
}

func (v *Nullable401Error) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullable401Error(val *401Error) *Nullable401Error {
	return &Nullable401Error{value: val, isSet: true}
}

func (v Nullable401Error) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *Nullable401Error) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


