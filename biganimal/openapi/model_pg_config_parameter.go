/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PgConfigParameter struct for PgConfigParameter
type PgConfigParameter struct {
	Name string `json:"name"`
	Unit string `json:"unit"`
	Category *string `json:"category,omitempty"`
	ShortDesc *string `json:"shortDesc,omitempty"`
	ExtraDesc *string `json:"extraDesc,omitempty"`
	Context *string `json:"context,omitempty"`
	InitDB *bool `json:"initDB,omitempty"`
	VarType string `json:"varType"`
	Source *string `json:"source,omitempty"`
	MinValue *string `json:"minValue,omitempty"`
	MaxValue *string `json:"maxValue,omitempty"`
	EnumValues []string `json:"enumValues,omitempty"`
	CnpoControlled *bool `json:"cnpoControlled,omitempty"`
	BootValue string `json:"bootValue"`
	ResetValue string `json:"resetValue"`
	ReadOnly bool `json:"readOnly"`
	ReadOnlyValue string `json:"readOnlyValue"`
}

// NewPgConfigParameter instantiates a new PgConfigParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPgConfigParameter(name string, unit string, varType string, bootValue string, resetValue string, readOnly bool, readOnlyValue string) *PgConfigParameter {
	this := PgConfigParameter{}
	this.Name = name
	this.Unit = unit
	this.VarType = varType
	this.BootValue = bootValue
	this.ResetValue = resetValue
	this.ReadOnly = readOnly
	this.ReadOnlyValue = readOnlyValue
	return &this
}

// NewPgConfigParameterWithDefaults instantiates a new PgConfigParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPgConfigParameterWithDefaults() *PgConfigParameter {
	this := PgConfigParameter{}
	return &this
}

// GetName returns the Name field value
func (o *PgConfigParameter) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PgConfigParameter) SetName(v string) {
	o.Name = v
}

// GetUnit returns the Unit field value
func (o *PgConfigParameter) GetUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Unit
}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Unit, true
}

// SetUnit sets field value
func (o *PgConfigParameter) SetUnit(v string) {
	o.Unit = v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *PgConfigParameter) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *PgConfigParameter) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *PgConfigParameter) SetCategory(v string) {
	o.Category = &v
}

// GetShortDesc returns the ShortDesc field value if set, zero value otherwise.
func (o *PgConfigParameter) GetShortDesc() string {
	if o == nil || o.ShortDesc == nil {
		var ret string
		return ret
	}
	return *o.ShortDesc
}

// GetShortDescOk returns a tuple with the ShortDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetShortDescOk() (*string, bool) {
	if o == nil || o.ShortDesc == nil {
		return nil, false
	}
	return o.ShortDesc, true
}

// HasShortDesc returns a boolean if a field has been set.
func (o *PgConfigParameter) HasShortDesc() bool {
	if o != nil && o.ShortDesc != nil {
		return true
	}

	return false
}

// SetShortDesc gets a reference to the given string and assigns it to the ShortDesc field.
func (o *PgConfigParameter) SetShortDesc(v string) {
	o.ShortDesc = &v
}

// GetExtraDesc returns the ExtraDesc field value if set, zero value otherwise.
func (o *PgConfigParameter) GetExtraDesc() string {
	if o == nil || o.ExtraDesc == nil {
		var ret string
		return ret
	}
	return *o.ExtraDesc
}

// GetExtraDescOk returns a tuple with the ExtraDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetExtraDescOk() (*string, bool) {
	if o == nil || o.ExtraDesc == nil {
		return nil, false
	}
	return o.ExtraDesc, true
}

// HasExtraDesc returns a boolean if a field has been set.
func (o *PgConfigParameter) HasExtraDesc() bool {
	if o != nil && o.ExtraDesc != nil {
		return true
	}

	return false
}

// SetExtraDesc gets a reference to the given string and assigns it to the ExtraDesc field.
func (o *PgConfigParameter) SetExtraDesc(v string) {
	o.ExtraDesc = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *PgConfigParameter) GetContext() string {
	if o == nil || o.Context == nil {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetContextOk() (*string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *PgConfigParameter) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *PgConfigParameter) SetContext(v string) {
	o.Context = &v
}

// GetInitDB returns the InitDB field value if set, zero value otherwise.
func (o *PgConfigParameter) GetInitDB() bool {
	if o == nil || o.InitDB == nil {
		var ret bool
		return ret
	}
	return *o.InitDB
}

// GetInitDBOk returns a tuple with the InitDB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetInitDBOk() (*bool, bool) {
	if o == nil || o.InitDB == nil {
		return nil, false
	}
	return o.InitDB, true
}

// HasInitDB returns a boolean if a field has been set.
func (o *PgConfigParameter) HasInitDB() bool {
	if o != nil && o.InitDB != nil {
		return true
	}

	return false
}

// SetInitDB gets a reference to the given bool and assigns it to the InitDB field.
func (o *PgConfigParameter) SetInitDB(v bool) {
	o.InitDB = &v
}

// GetVarType returns the VarType field value
func (o *PgConfigParameter) GetVarType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VarType
}

// GetVarTypeOk returns a tuple with the VarType field value
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetVarTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VarType, true
}

// SetVarType sets field value
func (o *PgConfigParameter) SetVarType(v string) {
	o.VarType = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *PgConfigParameter) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *PgConfigParameter) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *PgConfigParameter) SetSource(v string) {
	o.Source = &v
}

// GetMinValue returns the MinValue field value if set, zero value otherwise.
func (o *PgConfigParameter) GetMinValue() string {
	if o == nil || o.MinValue == nil {
		var ret string
		return ret
	}
	return *o.MinValue
}

// GetMinValueOk returns a tuple with the MinValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetMinValueOk() (*string, bool) {
	if o == nil || o.MinValue == nil {
		return nil, false
	}
	return o.MinValue, true
}

// HasMinValue returns a boolean if a field has been set.
func (o *PgConfigParameter) HasMinValue() bool {
	if o != nil && o.MinValue != nil {
		return true
	}

	return false
}

// SetMinValue gets a reference to the given string and assigns it to the MinValue field.
func (o *PgConfigParameter) SetMinValue(v string) {
	o.MinValue = &v
}

// GetMaxValue returns the MaxValue field value if set, zero value otherwise.
func (o *PgConfigParameter) GetMaxValue() string {
	if o == nil || o.MaxValue == nil {
		var ret string
		return ret
	}
	return *o.MaxValue
}

// GetMaxValueOk returns a tuple with the MaxValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetMaxValueOk() (*string, bool) {
	if o == nil || o.MaxValue == nil {
		return nil, false
	}
	return o.MaxValue, true
}

// HasMaxValue returns a boolean if a field has been set.
func (o *PgConfigParameter) HasMaxValue() bool {
	if o != nil && o.MaxValue != nil {
		return true
	}

	return false
}

// SetMaxValue gets a reference to the given string and assigns it to the MaxValue field.
func (o *PgConfigParameter) SetMaxValue(v string) {
	o.MaxValue = &v
}

// GetEnumValues returns the EnumValues field value if set, zero value otherwise.
func (o *PgConfigParameter) GetEnumValues() []string {
	if o == nil || o.EnumValues == nil {
		var ret []string
		return ret
	}
	return o.EnumValues
}

// GetEnumValuesOk returns a tuple with the EnumValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetEnumValuesOk() ([]string, bool) {
	if o == nil || o.EnumValues == nil {
		return nil, false
	}
	return o.EnumValues, true
}

// HasEnumValues returns a boolean if a field has been set.
func (o *PgConfigParameter) HasEnumValues() bool {
	if o != nil && o.EnumValues != nil {
		return true
	}

	return false
}

// SetEnumValues gets a reference to the given []string and assigns it to the EnumValues field.
func (o *PgConfigParameter) SetEnumValues(v []string) {
	o.EnumValues = v
}

// GetCnpoControlled returns the CnpoControlled field value if set, zero value otherwise.
func (o *PgConfigParameter) GetCnpoControlled() bool {
	if o == nil || o.CnpoControlled == nil {
		var ret bool
		return ret
	}
	return *o.CnpoControlled
}

// GetCnpoControlledOk returns a tuple with the CnpoControlled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetCnpoControlledOk() (*bool, bool) {
	if o == nil || o.CnpoControlled == nil {
		return nil, false
	}
	return o.CnpoControlled, true
}

// HasCnpoControlled returns a boolean if a field has been set.
func (o *PgConfigParameter) HasCnpoControlled() bool {
	if o != nil && o.CnpoControlled != nil {
		return true
	}

	return false
}

// SetCnpoControlled gets a reference to the given bool and assigns it to the CnpoControlled field.
func (o *PgConfigParameter) SetCnpoControlled(v bool) {
	o.CnpoControlled = &v
}

// GetBootValue returns the BootValue field value
func (o *PgConfigParameter) GetBootValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BootValue
}

// GetBootValueOk returns a tuple with the BootValue field value
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetBootValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BootValue, true
}

// SetBootValue sets field value
func (o *PgConfigParameter) SetBootValue(v string) {
	o.BootValue = v
}

// GetResetValue returns the ResetValue field value
func (o *PgConfigParameter) GetResetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResetValue
}

// GetResetValueOk returns a tuple with the ResetValue field value
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetResetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResetValue, true
}

// SetResetValue sets field value
func (o *PgConfigParameter) SetResetValue(v string) {
	o.ResetValue = v
}

// GetReadOnly returns the ReadOnly field value
func (o *PgConfigParameter) GetReadOnly() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetReadOnlyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadOnly, true
}

// SetReadOnly sets field value
func (o *PgConfigParameter) SetReadOnly(v bool) {
	o.ReadOnly = v
}

// GetReadOnlyValue returns the ReadOnlyValue field value
func (o *PgConfigParameter) GetReadOnlyValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReadOnlyValue
}

// GetReadOnlyValueOk returns a tuple with the ReadOnlyValue field value
// and a boolean to check if the value has been set.
func (o *PgConfigParameter) GetReadOnlyValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadOnlyValue, true
}

// SetReadOnlyValue sets field value
func (o *PgConfigParameter) SetReadOnlyValue(v string) {
	o.ReadOnlyValue = v
}

func (o PgConfigParameter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["unit"] = o.Unit
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.ShortDesc != nil {
		toSerialize["shortDesc"] = o.ShortDesc
	}
	if o.ExtraDesc != nil {
		toSerialize["extraDesc"] = o.ExtraDesc
	}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if o.InitDB != nil {
		toSerialize["initDB"] = o.InitDB
	}
	if true {
		toSerialize["varType"] = o.VarType
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.MinValue != nil {
		toSerialize["minValue"] = o.MinValue
	}
	if o.MaxValue != nil {
		toSerialize["maxValue"] = o.MaxValue
	}
	if o.EnumValues != nil {
		toSerialize["enumValues"] = o.EnumValues
	}
	if o.CnpoControlled != nil {
		toSerialize["cnpoControlled"] = o.CnpoControlled
	}
	if true {
		toSerialize["bootValue"] = o.BootValue
	}
	if true {
		toSerialize["resetValue"] = o.ResetValue
	}
	if true {
		toSerialize["readOnly"] = o.ReadOnly
	}
	if true {
		toSerialize["readOnlyValue"] = o.ReadOnlyValue
	}
	return json.Marshal(toSerialize)
}

type NullablePgConfigParameter struct {
	value *PgConfigParameter
	isSet bool
}

func (v NullablePgConfigParameter) Get() *PgConfigParameter {
	return v.value
}

func (v *NullablePgConfigParameter) Set(val *PgConfigParameter) {
	v.value = val
	v.isSet = true
}

func (v NullablePgConfigParameter) IsSet() bool {
	return v.isSet
}

func (v *NullablePgConfigParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePgConfigParameter(val *PgConfigParameter) *NullablePgConfigParameter {
	return &NullablePgConfigParameter{value: val, isSet: true}
}

func (v NullablePgConfigParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePgConfigParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


