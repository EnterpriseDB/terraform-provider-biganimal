/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ActivateRegion202Response struct for ActivateRegion202Response
type ActivateRegion202Response struct {
	Data ActivateRegion202ResponseData `json:"data"`
}

// NewActivateRegion202Response instantiates a new ActivateRegion202Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivateRegion202Response(data ActivateRegion202ResponseData) *ActivateRegion202Response {
	this := ActivateRegion202Response{}
	this.Data = data
	return &this
}

// NewActivateRegion202ResponseWithDefaults instantiates a new ActivateRegion202Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivateRegion202ResponseWithDefaults() *ActivateRegion202Response {
	this := ActivateRegion202Response{}
	return &this
}

// GetData returns the Data field value
func (o *ActivateRegion202Response) GetData() ActivateRegion202ResponseData {
	if o == nil {
		var ret ActivateRegion202ResponseData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ActivateRegion202Response) GetDataOk() (*ActivateRegion202ResponseData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ActivateRegion202Response) SetData(v ActivateRegion202ResponseData) {
	o.Data = v
}

func (o ActivateRegion202Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableActivateRegion202Response struct {
	value *ActivateRegion202Response
	isSet bool
}

func (v NullableActivateRegion202Response) Get() *ActivateRegion202Response {
	return v.value
}

func (v *NullableActivateRegion202Response) Set(val *ActivateRegion202Response) {
	v.value = val
	v.isSet = true
}

func (v NullableActivateRegion202Response) IsSet() bool {
	return v.isSet
}

func (v *NullableActivateRegion202Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivateRegion202Response(val *ActivateRegion202Response) *NullableActivateRegion202Response {
	return &NullableActivateRegion202Response{value: val, isSet: true}
}

func (v NullableActivateRegion202Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivateRegion202Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


