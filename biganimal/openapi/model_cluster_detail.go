/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterDetail struct for ClusterDetail
type ClusterDetail struct {
	ClusterId string `json:"clusterId"`
	ClusterName string `json:"clusterName"`
	ClusterArchitecture *ClusterDetailClusterArchitecture `json:"clusterArchitecture,omitempty"`
	PrivateNetworking bool `json:"privateNetworking"`
	BackupRetentionPeriod string `json:"backupRetentionPeriod"`
	Phase string `json:"phase"`
	// Deprecated
	Replicas *float32 `json:"replicas,omitempty"`
	CreatedAt *PointInTime `json:"createdAt,omitempty"`
	DeletedAt *PointInTime `json:"deletedAt,omitempty"`
	ExpiredAt *PointInTime `json:"expiredAt,omitempty"`
	FirstRecoverabilityPointAt *PointInTime `json:"firstRecoverabilityPointAt,omitempty"`
	AllowedIpRanges []AllowedIpRange `json:"allowedIpRanges"`
	PgConfig []ClusterDetailPgConfigInner `json:"pgConfig,omitempty"`
	PgType *PgType `json:"pgType,omitempty"`
	PgVersion *PgVersion `json:"pgVersion,omitempty"`
	Provider *CloudProvider `json:"provider,omitempty"`
	ReadOnlyConnections *bool `json:"readOnlyConnections,omitempty"`
	Region *CloudProviderRegion `json:"region,omitempty"`
	ResizingPvc []string `json:"resizingPvc"`
	Conditions []ClusterDetailConditionsInner `json:"conditions"`
	InstanceType *CloudProviderRegionInstanceType `json:"instanceType,omitempty"`
	Storage *ClusterDetailStorage `json:"storage,omitempty"`
	EvaluatedPgConfig []ClusterDetailPgConfigInner `json:"evaluatedPgConfig,omitempty"`
}

// NewClusterDetail instantiates a new ClusterDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterDetail(clusterId string, clusterName string, privateNetworking bool, backupRetentionPeriod string, phase string, allowedIpRanges []AllowedIpRange, resizingPvc []string, conditions []ClusterDetailConditionsInner) *ClusterDetail {
	this := ClusterDetail{}
	this.ClusterId = clusterId
	this.ClusterName = clusterName
	this.PrivateNetworking = privateNetworking
	this.BackupRetentionPeriod = backupRetentionPeriod
	this.Phase = phase
	this.AllowedIpRanges = allowedIpRanges
	this.ResizingPvc = resizingPvc
	this.Conditions = conditions
	return &this
}

// NewClusterDetailWithDefaults instantiates a new ClusterDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterDetailWithDefaults() *ClusterDetail {
	this := ClusterDetail{}
	return &this
}

// GetClusterId returns the ClusterId field value
func (o *ClusterDetail) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *ClusterDetail) SetClusterId(v string) {
	o.ClusterId = v
}

// GetClusterName returns the ClusterName field value
func (o *ClusterDetail) GetClusterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetClusterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterName, true
}

// SetClusterName sets field value
func (o *ClusterDetail) SetClusterName(v string) {
	o.ClusterName = v
}

// GetClusterArchitecture returns the ClusterArchitecture field value if set, zero value otherwise.
func (o *ClusterDetail) GetClusterArchitecture() ClusterDetailClusterArchitecture {
	if o == nil || o.ClusterArchitecture == nil {
		var ret ClusterDetailClusterArchitecture
		return ret
	}
	return *o.ClusterArchitecture
}

// GetClusterArchitectureOk returns a tuple with the ClusterArchitecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetClusterArchitectureOk() (*ClusterDetailClusterArchitecture, bool) {
	if o == nil || o.ClusterArchitecture == nil {
		return nil, false
	}
	return o.ClusterArchitecture, true
}

// HasClusterArchitecture returns a boolean if a field has been set.
func (o *ClusterDetail) HasClusterArchitecture() bool {
	if o != nil && o.ClusterArchitecture != nil {
		return true
	}

	return false
}

// SetClusterArchitecture gets a reference to the given ClusterDetailClusterArchitecture and assigns it to the ClusterArchitecture field.
func (o *ClusterDetail) SetClusterArchitecture(v ClusterDetailClusterArchitecture) {
	o.ClusterArchitecture = &v
}

// GetPrivateNetworking returns the PrivateNetworking field value
func (o *ClusterDetail) GetPrivateNetworking() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PrivateNetworking
}

// GetPrivateNetworkingOk returns a tuple with the PrivateNetworking field value
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetPrivateNetworkingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateNetworking, true
}

// SetPrivateNetworking sets field value
func (o *ClusterDetail) SetPrivateNetworking(v bool) {
	o.PrivateNetworking = v
}

// GetBackupRetentionPeriod returns the BackupRetentionPeriod field value
func (o *ClusterDetail) GetBackupRetentionPeriod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackupRetentionPeriod
}

// GetBackupRetentionPeriodOk returns a tuple with the BackupRetentionPeriod field value
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetBackupRetentionPeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackupRetentionPeriod, true
}

// SetBackupRetentionPeriod sets field value
func (o *ClusterDetail) SetBackupRetentionPeriod(v string) {
	o.BackupRetentionPeriod = v
}

// GetPhase returns the Phase field value
func (o *ClusterDetail) GetPhase() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetPhaseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Phase, true
}

// SetPhase sets field value
func (o *ClusterDetail) SetPhase(v string) {
	o.Phase = v
}

// GetReplicas returns the Replicas field value if set, zero value otherwise.
// Deprecated
func (o *ClusterDetail) GetReplicas() float32 {
	if o == nil || o.Replicas == nil {
		var ret float32
		return ret
	}
	return *o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ClusterDetail) GetReplicasOk() (*float32, bool) {
	if o == nil || o.Replicas == nil {
		return nil, false
	}
	return o.Replicas, true
}

// HasReplicas returns a boolean if a field has been set.
func (o *ClusterDetail) HasReplicas() bool {
	if o != nil && o.Replicas != nil {
		return true
	}

	return false
}

// SetReplicas gets a reference to the given float32 and assigns it to the Replicas field.
// Deprecated
func (o *ClusterDetail) SetReplicas(v float32) {
	o.Replicas = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ClusterDetail) GetCreatedAt() PointInTime {
	if o == nil || o.CreatedAt == nil {
		var ret PointInTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetCreatedAtOk() (*PointInTime, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ClusterDetail) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given PointInTime and assigns it to the CreatedAt field.
func (o *ClusterDetail) SetCreatedAt(v PointInTime) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ClusterDetail) GetDeletedAt() PointInTime {
	if o == nil || o.DeletedAt == nil {
		var ret PointInTime
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetDeletedAtOk() (*PointInTime, bool) {
	if o == nil || o.DeletedAt == nil {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ClusterDetail) HasDeletedAt() bool {
	if o != nil && o.DeletedAt != nil {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given PointInTime and assigns it to the DeletedAt field.
func (o *ClusterDetail) SetDeletedAt(v PointInTime) {
	o.DeletedAt = &v
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise.
func (o *ClusterDetail) GetExpiredAt() PointInTime {
	if o == nil || o.ExpiredAt == nil {
		var ret PointInTime
		return ret
	}
	return *o.ExpiredAt
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetExpiredAtOk() (*PointInTime, bool) {
	if o == nil || o.ExpiredAt == nil {
		return nil, false
	}
	return o.ExpiredAt, true
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *ClusterDetail) HasExpiredAt() bool {
	if o != nil && o.ExpiredAt != nil {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given PointInTime and assigns it to the ExpiredAt field.
func (o *ClusterDetail) SetExpiredAt(v PointInTime) {
	o.ExpiredAt = &v
}

// GetFirstRecoverabilityPointAt returns the FirstRecoverabilityPointAt field value if set, zero value otherwise.
func (o *ClusterDetail) GetFirstRecoverabilityPointAt() PointInTime {
	if o == nil || o.FirstRecoverabilityPointAt == nil {
		var ret PointInTime
		return ret
	}
	return *o.FirstRecoverabilityPointAt
}

// GetFirstRecoverabilityPointAtOk returns a tuple with the FirstRecoverabilityPointAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetFirstRecoverabilityPointAtOk() (*PointInTime, bool) {
	if o == nil || o.FirstRecoverabilityPointAt == nil {
		return nil, false
	}
	return o.FirstRecoverabilityPointAt, true
}

// HasFirstRecoverabilityPointAt returns a boolean if a field has been set.
func (o *ClusterDetail) HasFirstRecoverabilityPointAt() bool {
	if o != nil && o.FirstRecoverabilityPointAt != nil {
		return true
	}

	return false
}

// SetFirstRecoverabilityPointAt gets a reference to the given PointInTime and assigns it to the FirstRecoverabilityPointAt field.
func (o *ClusterDetail) SetFirstRecoverabilityPointAt(v PointInTime) {
	o.FirstRecoverabilityPointAt = &v
}

// GetAllowedIpRanges returns the AllowedIpRanges field value
func (o *ClusterDetail) GetAllowedIpRanges() []AllowedIpRange {
	if o == nil {
		var ret []AllowedIpRange
		return ret
	}

	return o.AllowedIpRanges
}

// GetAllowedIpRangesOk returns a tuple with the AllowedIpRanges field value
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetAllowedIpRangesOk() ([]AllowedIpRange, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowedIpRanges, true
}

// SetAllowedIpRanges sets field value
func (o *ClusterDetail) SetAllowedIpRanges(v []AllowedIpRange) {
	o.AllowedIpRanges = v
}

// GetPgConfig returns the PgConfig field value if set, zero value otherwise.
func (o *ClusterDetail) GetPgConfig() []ClusterDetailPgConfigInner {
	if o == nil || o.PgConfig == nil {
		var ret []ClusterDetailPgConfigInner
		return ret
	}
	return o.PgConfig
}

// GetPgConfigOk returns a tuple with the PgConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetPgConfigOk() ([]ClusterDetailPgConfigInner, bool) {
	if o == nil || o.PgConfig == nil {
		return nil, false
	}
	return o.PgConfig, true
}

// HasPgConfig returns a boolean if a field has been set.
func (o *ClusterDetail) HasPgConfig() bool {
	if o != nil && o.PgConfig != nil {
		return true
	}

	return false
}

// SetPgConfig gets a reference to the given []ClusterDetailPgConfigInner and assigns it to the PgConfig field.
func (o *ClusterDetail) SetPgConfig(v []ClusterDetailPgConfigInner) {
	o.PgConfig = v
}

// GetPgType returns the PgType field value if set, zero value otherwise.
func (o *ClusterDetail) GetPgType() PgType {
	if o == nil || o.PgType == nil {
		var ret PgType
		return ret
	}
	return *o.PgType
}

// GetPgTypeOk returns a tuple with the PgType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetPgTypeOk() (*PgType, bool) {
	if o == nil || o.PgType == nil {
		return nil, false
	}
	return o.PgType, true
}

// HasPgType returns a boolean if a field has been set.
func (o *ClusterDetail) HasPgType() bool {
	if o != nil && o.PgType != nil {
		return true
	}

	return false
}

// SetPgType gets a reference to the given PgType and assigns it to the PgType field.
func (o *ClusterDetail) SetPgType(v PgType) {
	o.PgType = &v
}

// GetPgVersion returns the PgVersion field value if set, zero value otherwise.
func (o *ClusterDetail) GetPgVersion() PgVersion {
	if o == nil || o.PgVersion == nil {
		var ret PgVersion
		return ret
	}
	return *o.PgVersion
}

// GetPgVersionOk returns a tuple with the PgVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetPgVersionOk() (*PgVersion, bool) {
	if o == nil || o.PgVersion == nil {
		return nil, false
	}
	return o.PgVersion, true
}

// HasPgVersion returns a boolean if a field has been set.
func (o *ClusterDetail) HasPgVersion() bool {
	if o != nil && o.PgVersion != nil {
		return true
	}

	return false
}

// SetPgVersion gets a reference to the given PgVersion and assigns it to the PgVersion field.
func (o *ClusterDetail) SetPgVersion(v PgVersion) {
	o.PgVersion = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *ClusterDetail) GetProvider() CloudProvider {
	if o == nil || o.Provider == nil {
		var ret CloudProvider
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetProviderOk() (*CloudProvider, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *ClusterDetail) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given CloudProvider and assigns it to the Provider field.
func (o *ClusterDetail) SetProvider(v CloudProvider) {
	o.Provider = &v
}

// GetReadOnlyConnections returns the ReadOnlyConnections field value if set, zero value otherwise.
func (o *ClusterDetail) GetReadOnlyConnections() bool {
	if o == nil || o.ReadOnlyConnections == nil {
		var ret bool
		return ret
	}
	return *o.ReadOnlyConnections
}

// GetReadOnlyConnectionsOk returns a tuple with the ReadOnlyConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetReadOnlyConnectionsOk() (*bool, bool) {
	if o == nil || o.ReadOnlyConnections == nil {
		return nil, false
	}
	return o.ReadOnlyConnections, true
}

// HasReadOnlyConnections returns a boolean if a field has been set.
func (o *ClusterDetail) HasReadOnlyConnections() bool {
	if o != nil && o.ReadOnlyConnections != nil {
		return true
	}

	return false
}

// SetReadOnlyConnections gets a reference to the given bool and assigns it to the ReadOnlyConnections field.
func (o *ClusterDetail) SetReadOnlyConnections(v bool) {
	o.ReadOnlyConnections = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ClusterDetail) GetRegion() CloudProviderRegion {
	if o == nil || o.Region == nil {
		var ret CloudProviderRegion
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetRegionOk() (*CloudProviderRegion, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ClusterDetail) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given CloudProviderRegion and assigns it to the Region field.
func (o *ClusterDetail) SetRegion(v CloudProviderRegion) {
	o.Region = &v
}

// GetResizingPvc returns the ResizingPvc field value
func (o *ClusterDetail) GetResizingPvc() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ResizingPvc
}

// GetResizingPvcOk returns a tuple with the ResizingPvc field value
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetResizingPvcOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResizingPvc, true
}

// SetResizingPvc sets field value
func (o *ClusterDetail) SetResizingPvc(v []string) {
	o.ResizingPvc = v
}

// GetConditions returns the Conditions field value
func (o *ClusterDetail) GetConditions() []ClusterDetailConditionsInner {
	if o == nil {
		var ret []ClusterDetailConditionsInner
		return ret
	}

	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetConditionsOk() ([]ClusterDetailConditionsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Conditions, true
}

// SetConditions sets field value
func (o *ClusterDetail) SetConditions(v []ClusterDetailConditionsInner) {
	o.Conditions = v
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *ClusterDetail) GetInstanceType() CloudProviderRegionInstanceType {
	if o == nil || o.InstanceType == nil {
		var ret CloudProviderRegionInstanceType
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetInstanceTypeOk() (*CloudProviderRegionInstanceType, bool) {
	if o == nil || o.InstanceType == nil {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *ClusterDetail) HasInstanceType() bool {
	if o != nil && o.InstanceType != nil {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given CloudProviderRegionInstanceType and assigns it to the InstanceType field.
func (o *ClusterDetail) SetInstanceType(v CloudProviderRegionInstanceType) {
	o.InstanceType = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *ClusterDetail) GetStorage() ClusterDetailStorage {
	if o == nil || o.Storage == nil {
		var ret ClusterDetailStorage
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetStorageOk() (*ClusterDetailStorage, bool) {
	if o == nil || o.Storage == nil {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *ClusterDetail) HasStorage() bool {
	if o != nil && o.Storage != nil {
		return true
	}

	return false
}

// SetStorage gets a reference to the given ClusterDetailStorage and assigns it to the Storage field.
func (o *ClusterDetail) SetStorage(v ClusterDetailStorage) {
	o.Storage = &v
}

// GetEvaluatedPgConfig returns the EvaluatedPgConfig field value if set, zero value otherwise.
func (o *ClusterDetail) GetEvaluatedPgConfig() []ClusterDetailPgConfigInner {
	if o == nil || o.EvaluatedPgConfig == nil {
		var ret []ClusterDetailPgConfigInner
		return ret
	}
	return o.EvaluatedPgConfig
}

// GetEvaluatedPgConfigOk returns a tuple with the EvaluatedPgConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDetail) GetEvaluatedPgConfigOk() ([]ClusterDetailPgConfigInner, bool) {
	if o == nil || o.EvaluatedPgConfig == nil {
		return nil, false
	}
	return o.EvaluatedPgConfig, true
}

// HasEvaluatedPgConfig returns a boolean if a field has been set.
func (o *ClusterDetail) HasEvaluatedPgConfig() bool {
	if o != nil && o.EvaluatedPgConfig != nil {
		return true
	}

	return false
}

// SetEvaluatedPgConfig gets a reference to the given []ClusterDetailPgConfigInner and assigns it to the EvaluatedPgConfig field.
func (o *ClusterDetail) SetEvaluatedPgConfig(v []ClusterDetailPgConfigInner) {
	o.EvaluatedPgConfig = v
}

func (o ClusterDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clusterId"] = o.ClusterId
	}
	if true {
		toSerialize["clusterName"] = o.ClusterName
	}
	if o.ClusterArchitecture != nil {
		toSerialize["clusterArchitecture"] = o.ClusterArchitecture
	}
	if true {
		toSerialize["privateNetworking"] = o.PrivateNetworking
	}
	if true {
		toSerialize["backupRetentionPeriod"] = o.BackupRetentionPeriod
	}
	if true {
		toSerialize["phase"] = o.Phase
	}
	if o.Replicas != nil {
		toSerialize["replicas"] = o.Replicas
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.DeletedAt != nil {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	if o.ExpiredAt != nil {
		toSerialize["expiredAt"] = o.ExpiredAt
	}
	if o.FirstRecoverabilityPointAt != nil {
		toSerialize["firstRecoverabilityPointAt"] = o.FirstRecoverabilityPointAt
	}
	if true {
		toSerialize["allowedIpRanges"] = o.AllowedIpRanges
	}
	if o.PgConfig != nil {
		toSerialize["pgConfig"] = o.PgConfig
	}
	if o.PgType != nil {
		toSerialize["pgType"] = o.PgType
	}
	if o.PgVersion != nil {
		toSerialize["pgVersion"] = o.PgVersion
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.ReadOnlyConnections != nil {
		toSerialize["readOnlyConnections"] = o.ReadOnlyConnections
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if true {
		toSerialize["resizingPvc"] = o.ResizingPvc
	}
	if true {
		toSerialize["conditions"] = o.Conditions
	}
	if o.InstanceType != nil {
		toSerialize["instanceType"] = o.InstanceType
	}
	if o.Storage != nil {
		toSerialize["storage"] = o.Storage
	}
	if o.EvaluatedPgConfig != nil {
		toSerialize["evaluatedPgConfig"] = o.EvaluatedPgConfig
	}
	return json.Marshal(toSerialize)
}

type NullableClusterDetail struct {
	value *ClusterDetail
	isSet bool
}

func (v NullableClusterDetail) Get() *ClusterDetail {
	return v.value
}

func (v *NullableClusterDetail) Set(val *ClusterDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterDetail(val *ClusterDetail) *NullableClusterDetail {
	return &NullableClusterDetail{value: val, isSet: true}
}

func (v NullableClusterDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


