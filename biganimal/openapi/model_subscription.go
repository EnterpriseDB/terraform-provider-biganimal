/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Subscription struct for Subscription
type Subscription struct {
	PrincipalName string `json:"principalName"`
	PrincipalSecret string `json:"principalSecret"`
	AzSubId string `json:"azSubId"`
	AzResourceGroup *string `json:"azResourceGroup,omitempty"`
	OrgName string `json:"orgName"`
}

// NewSubscription instantiates a new Subscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscription(principalName string, principalSecret string, azSubId string, orgName string) *Subscription {
	this := Subscription{}
	this.PrincipalName = principalName
	this.PrincipalSecret = principalSecret
	this.AzSubId = azSubId
	this.OrgName = orgName
	return &this
}

// NewSubscriptionWithDefaults instantiates a new Subscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionWithDefaults() *Subscription {
	this := Subscription{}
	return &this
}

// GetPrincipalName returns the PrincipalName field value
func (o *Subscription) GetPrincipalName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrincipalName
}

// GetPrincipalNameOk returns a tuple with the PrincipalName field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetPrincipalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrincipalName, true
}

// SetPrincipalName sets field value
func (o *Subscription) SetPrincipalName(v string) {
	o.PrincipalName = v
}

// GetPrincipalSecret returns the PrincipalSecret field value
func (o *Subscription) GetPrincipalSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrincipalSecret
}

// GetPrincipalSecretOk returns a tuple with the PrincipalSecret field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetPrincipalSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrincipalSecret, true
}

// SetPrincipalSecret sets field value
func (o *Subscription) SetPrincipalSecret(v string) {
	o.PrincipalSecret = v
}

// GetAzSubId returns the AzSubId field value
func (o *Subscription) GetAzSubId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AzSubId
}

// GetAzSubIdOk returns a tuple with the AzSubId field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetAzSubIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AzSubId, true
}

// SetAzSubId sets field value
func (o *Subscription) SetAzSubId(v string) {
	o.AzSubId = v
}

// GetAzResourceGroup returns the AzResourceGroup field value if set, zero value otherwise.
func (o *Subscription) GetAzResourceGroup() string {
	if o == nil || o.AzResourceGroup == nil {
		var ret string
		return ret
	}
	return *o.AzResourceGroup
}

// GetAzResourceGroupOk returns a tuple with the AzResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscription) GetAzResourceGroupOk() (*string, bool) {
	if o == nil || o.AzResourceGroup == nil {
		return nil, false
	}
	return o.AzResourceGroup, true
}

// HasAzResourceGroup returns a boolean if a field has been set.
func (o *Subscription) HasAzResourceGroup() bool {
	if o != nil && o.AzResourceGroup != nil {
		return true
	}

	return false
}

// SetAzResourceGroup gets a reference to the given string and assigns it to the AzResourceGroup field.
func (o *Subscription) SetAzResourceGroup(v string) {
	o.AzResourceGroup = &v
}

// GetOrgName returns the OrgName field value
func (o *Subscription) GetOrgName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetOrgNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgName, true
}

// SetOrgName sets field value
func (o *Subscription) SetOrgName(v string) {
	o.OrgName = v
}

func (o Subscription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["principalName"] = o.PrincipalName
	}
	if true {
		toSerialize["principalSecret"] = o.PrincipalSecret
	}
	if true {
		toSerialize["azSubId"] = o.AzSubId
	}
	if o.AzResourceGroup != nil {
		toSerialize["azResourceGroup"] = o.AzResourceGroup
	}
	if true {
		toSerialize["orgName"] = o.OrgName
	}
	return json.Marshal(toSerialize)
}

type NullableSubscription struct {
	value *Subscription
	isSet bool
}

func (v NullableSubscription) Get() *Subscription {
	return v.value
}

func (v *NullableSubscription) Set(val *Subscription) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscription(val *Subscription) *NullableSubscription {
	return &NullableSubscription{value: val, isSet: true}
}

func (v NullableSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


