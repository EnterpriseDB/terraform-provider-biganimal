/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RolePermissions struct for RolePermissions
type RolePermissions struct {
	PermissionIds []string `json:"permissionIds"`
}

// NewRolePermissions instantiates a new RolePermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolePermissions(permissionIds []string) *RolePermissions {
	this := RolePermissions{}
	this.PermissionIds = permissionIds
	return &this
}

// NewRolePermissionsWithDefaults instantiates a new RolePermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolePermissionsWithDefaults() *RolePermissions {
	this := RolePermissions{}
	return &this
}

// GetPermissionIds returns the PermissionIds field value
func (o *RolePermissions) GetPermissionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.PermissionIds
}

// GetPermissionIdsOk returns a tuple with the PermissionIds field value
// and a boolean to check if the value has been set.
func (o *RolePermissions) GetPermissionIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PermissionIds, true
}

// SetPermissionIds sets field value
func (o *RolePermissions) SetPermissionIds(v []string) {
	o.PermissionIds = v
}

func (o RolePermissions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["permissionIds"] = o.PermissionIds
	}
	return json.Marshal(toSerialize)
}

type NullableRolePermissions struct {
	value *RolePermissions
	isSet bool
}

func (v NullableRolePermissions) Get() *RolePermissions {
	return v.value
}

func (v *NullableRolePermissions) Set(val *RolePermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableRolePermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableRolePermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolePermissions(val *RolePermissions) *NullableRolePermissions {
	return &NullableRolePermissions{value: val, isSet: true}
}

func (v NullableRolePermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolePermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


