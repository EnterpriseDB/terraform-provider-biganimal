/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PointInTime struct for PointInTime
type PointInTime struct {
	Seconds float32 `json:"seconds"`
	Nanos float32 `json:"nanos"`
}

// NewPointInTime instantiates a new PointInTime object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPointInTime(seconds float32, nanos float32) *PointInTime {
	this := PointInTime{}
	this.Seconds = seconds
	this.Nanos = nanos
	return &this
}

// NewPointInTimeWithDefaults instantiates a new PointInTime object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPointInTimeWithDefaults() *PointInTime {
	this := PointInTime{}
	return &this
}

// GetSeconds returns the Seconds field value
func (o *PointInTime) GetSeconds() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Seconds
}

// GetSecondsOk returns a tuple with the Seconds field value
// and a boolean to check if the value has been set.
func (o *PointInTime) GetSecondsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Seconds, true
}

// SetSeconds sets field value
func (o *PointInTime) SetSeconds(v float32) {
	o.Seconds = v
}

// GetNanos returns the Nanos field value
func (o *PointInTime) GetNanos() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Nanos
}

// GetNanosOk returns a tuple with the Nanos field value
// and a boolean to check if the value has been set.
func (o *PointInTime) GetNanosOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nanos, true
}

// SetNanos sets field value
func (o *PointInTime) SetNanos(v float32) {
	o.Nanos = v
}

func (o PointInTime) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["seconds"] = o.Seconds
	}
	if true {
		toSerialize["nanos"] = o.Nanos
	}
	return json.Marshal(toSerialize)
}

type NullablePointInTime struct {
	value *PointInTime
	isSet bool
}

func (v NullablePointInTime) Get() *PointInTime {
	return v.value
}

func (v *NullablePointInTime) Set(val *PointInTime) {
	v.value = val
	v.isSet = true
}

func (v NullablePointInTime) IsSet() bool {
	return v.isSet
}

func (v *NullablePointInTime) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePointInTime(val *PointInTime) *NullablePointInTime {
	return &NullablePointInTime{value: val, isSet: true}
}

func (v NullablePointInTime) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePointInTime) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


