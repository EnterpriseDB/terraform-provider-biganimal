/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateCluster struct for CreateCluster
type CreateCluster struct {
	ClusterName string `json:"clusterName"`
	Password string `json:"password"`
	PgType CreateClusterPgType `json:"pgType"`
	PgVersion CreateClusterPgVersion `json:"pgVersion"`
	Provider CreateClusterProvider `json:"provider"`
	ReadOnlyConnections *bool `json:"readOnlyConnections,omitempty"`
	Region ActivateRegion202ResponseData `json:"region"`
	InstanceType CreateClusterInstanceType `json:"instanceType"`
	Storage CreateClusterStorage `json:"storage"`
	PrivateNetworking bool `json:"privateNetworking"`
	AllowedIpRanges []AllowedIpRange `json:"allowedIpRanges"`
	PgConfig []ClusterDetailPgConfigInner `json:"pgConfig"`
	// Deprecated
	Replicas *float32 `json:"replicas,omitempty"`
	ClusterArchitecture *CreateClusterClusterArchitecture `json:"clusterArchitecture,omitempty"`
	BackupRetentionPeriod *string `json:"backupRetentionPeriod,omitempty"`
}

// NewCreateCluster instantiates a new CreateCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCluster(clusterName string, password string, pgType CreateClusterPgType, pgVersion CreateClusterPgVersion, provider CreateClusterProvider, region ActivateRegion202ResponseData, instanceType CreateClusterInstanceType, storage CreateClusterStorage, privateNetworking bool, allowedIpRanges []AllowedIpRange, pgConfig []ClusterDetailPgConfigInner) *CreateCluster {
	this := CreateCluster{}
	this.ClusterName = clusterName
	this.Password = password
	this.PgType = pgType
	this.PgVersion = pgVersion
	this.Provider = provider
	this.Region = region
	this.InstanceType = instanceType
	this.Storage = storage
	this.PrivateNetworking = privateNetworking
	this.AllowedIpRanges = allowedIpRanges
	this.PgConfig = pgConfig
	return &this
}

// NewCreateClusterWithDefaults instantiates a new CreateCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateClusterWithDefaults() *CreateCluster {
	this := CreateCluster{}
	return &this
}

// GetClusterName returns the ClusterName field value
func (o *CreateCluster) GetClusterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetClusterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterName, true
}

// SetClusterName sets field value
func (o *CreateCluster) SetClusterName(v string) {
	o.ClusterName = v
}

// GetPassword returns the Password field value
func (o *CreateCluster) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *CreateCluster) SetPassword(v string) {
	o.Password = v
}

// GetPgType returns the PgType field value
func (o *CreateCluster) GetPgType() CreateClusterPgType {
	if o == nil {
		var ret CreateClusterPgType
		return ret
	}

	return o.PgType
}

// GetPgTypeOk returns a tuple with the PgType field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetPgTypeOk() (*CreateClusterPgType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PgType, true
}

// SetPgType sets field value
func (o *CreateCluster) SetPgType(v CreateClusterPgType) {
	o.PgType = v
}

// GetPgVersion returns the PgVersion field value
func (o *CreateCluster) GetPgVersion() CreateClusterPgVersion {
	if o == nil {
		var ret CreateClusterPgVersion
		return ret
	}

	return o.PgVersion
}

// GetPgVersionOk returns a tuple with the PgVersion field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetPgVersionOk() (*CreateClusterPgVersion, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PgVersion, true
}

// SetPgVersion sets field value
func (o *CreateCluster) SetPgVersion(v CreateClusterPgVersion) {
	o.PgVersion = v
}

// GetProvider returns the Provider field value
func (o *CreateCluster) GetProvider() CreateClusterProvider {
	if o == nil {
		var ret CreateClusterProvider
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetProviderOk() (*CreateClusterProvider, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *CreateCluster) SetProvider(v CreateClusterProvider) {
	o.Provider = v
}

// GetReadOnlyConnections returns the ReadOnlyConnections field value if set, zero value otherwise.
func (o *CreateCluster) GetReadOnlyConnections() bool {
	if o == nil || o.ReadOnlyConnections == nil {
		var ret bool
		return ret
	}
	return *o.ReadOnlyConnections
}

// GetReadOnlyConnectionsOk returns a tuple with the ReadOnlyConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetReadOnlyConnectionsOk() (*bool, bool) {
	if o == nil || o.ReadOnlyConnections == nil {
		return nil, false
	}
	return o.ReadOnlyConnections, true
}

// HasReadOnlyConnections returns a boolean if a field has been set.
func (o *CreateCluster) HasReadOnlyConnections() bool {
	if o != nil && o.ReadOnlyConnections != nil {
		return true
	}

	return false
}

// SetReadOnlyConnections gets a reference to the given bool and assigns it to the ReadOnlyConnections field.
func (o *CreateCluster) SetReadOnlyConnections(v bool) {
	o.ReadOnlyConnections = &v
}

// GetRegion returns the Region field value
func (o *CreateCluster) GetRegion() ActivateRegion202ResponseData {
	if o == nil {
		var ret ActivateRegion202ResponseData
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetRegionOk() (*ActivateRegion202ResponseData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *CreateCluster) SetRegion(v ActivateRegion202ResponseData) {
	o.Region = v
}

// GetInstanceType returns the InstanceType field value
func (o *CreateCluster) GetInstanceType() CreateClusterInstanceType {
	if o == nil {
		var ret CreateClusterInstanceType
		return ret
	}

	return o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetInstanceTypeOk() (*CreateClusterInstanceType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceType, true
}

// SetInstanceType sets field value
func (o *CreateCluster) SetInstanceType(v CreateClusterInstanceType) {
	o.InstanceType = v
}

// GetStorage returns the Storage field value
func (o *CreateCluster) GetStorage() CreateClusterStorage {
	if o == nil {
		var ret CreateClusterStorage
		return ret
	}

	return o.Storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetStorageOk() (*CreateClusterStorage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Storage, true
}

// SetStorage sets field value
func (o *CreateCluster) SetStorage(v CreateClusterStorage) {
	o.Storage = v
}

// GetPrivateNetworking returns the PrivateNetworking field value
func (o *CreateCluster) GetPrivateNetworking() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PrivateNetworking
}

// GetPrivateNetworkingOk returns a tuple with the PrivateNetworking field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetPrivateNetworkingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateNetworking, true
}

// SetPrivateNetworking sets field value
func (o *CreateCluster) SetPrivateNetworking(v bool) {
	o.PrivateNetworking = v
}

// GetAllowedIpRanges returns the AllowedIpRanges field value
func (o *CreateCluster) GetAllowedIpRanges() []AllowedIpRange {
	if o == nil {
		var ret []AllowedIpRange
		return ret
	}

	return o.AllowedIpRanges
}

// GetAllowedIpRangesOk returns a tuple with the AllowedIpRanges field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetAllowedIpRangesOk() ([]AllowedIpRange, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowedIpRanges, true
}

// SetAllowedIpRanges sets field value
func (o *CreateCluster) SetAllowedIpRanges(v []AllowedIpRange) {
	o.AllowedIpRanges = v
}

// GetPgConfig returns the PgConfig field value
func (o *CreateCluster) GetPgConfig() []ClusterDetailPgConfigInner {
	if o == nil {
		var ret []ClusterDetailPgConfigInner
		return ret
	}

	return o.PgConfig
}

// GetPgConfigOk returns a tuple with the PgConfig field value
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetPgConfigOk() ([]ClusterDetailPgConfigInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.PgConfig, true
}

// SetPgConfig sets field value
func (o *CreateCluster) SetPgConfig(v []ClusterDetailPgConfigInner) {
	o.PgConfig = v
}

// GetReplicas returns the Replicas field value if set, zero value otherwise.
// Deprecated
func (o *CreateCluster) GetReplicas() float32 {
	if o == nil || o.Replicas == nil {
		var ret float32
		return ret
	}
	return *o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CreateCluster) GetReplicasOk() (*float32, bool) {
	if o == nil || o.Replicas == nil {
		return nil, false
	}
	return o.Replicas, true
}

// HasReplicas returns a boolean if a field has been set.
func (o *CreateCluster) HasReplicas() bool {
	if o != nil && o.Replicas != nil {
		return true
	}

	return false
}

// SetReplicas gets a reference to the given float32 and assigns it to the Replicas field.
// Deprecated
func (o *CreateCluster) SetReplicas(v float32) {
	o.Replicas = &v
}

// GetClusterArchitecture returns the ClusterArchitecture field value if set, zero value otherwise.
func (o *CreateCluster) GetClusterArchitecture() CreateClusterClusterArchitecture {
	if o == nil || o.ClusterArchitecture == nil {
		var ret CreateClusterClusterArchitecture
		return ret
	}
	return *o.ClusterArchitecture
}

// GetClusterArchitectureOk returns a tuple with the ClusterArchitecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetClusterArchitectureOk() (*CreateClusterClusterArchitecture, bool) {
	if o == nil || o.ClusterArchitecture == nil {
		return nil, false
	}
	return o.ClusterArchitecture, true
}

// HasClusterArchitecture returns a boolean if a field has been set.
func (o *CreateCluster) HasClusterArchitecture() bool {
	if o != nil && o.ClusterArchitecture != nil {
		return true
	}

	return false
}

// SetClusterArchitecture gets a reference to the given CreateClusterClusterArchitecture and assigns it to the ClusterArchitecture field.
func (o *CreateCluster) SetClusterArchitecture(v CreateClusterClusterArchitecture) {
	o.ClusterArchitecture = &v
}

// GetBackupRetentionPeriod returns the BackupRetentionPeriod field value if set, zero value otherwise.
func (o *CreateCluster) GetBackupRetentionPeriod() string {
	if o == nil || o.BackupRetentionPeriod == nil {
		var ret string
		return ret
	}
	return *o.BackupRetentionPeriod
}

// GetBackupRetentionPeriodOk returns a tuple with the BackupRetentionPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCluster) GetBackupRetentionPeriodOk() (*string, bool) {
	if o == nil || o.BackupRetentionPeriod == nil {
		return nil, false
	}
	return o.BackupRetentionPeriod, true
}

// HasBackupRetentionPeriod returns a boolean if a field has been set.
func (o *CreateCluster) HasBackupRetentionPeriod() bool {
	if o != nil && o.BackupRetentionPeriod != nil {
		return true
	}

	return false
}

// SetBackupRetentionPeriod gets a reference to the given string and assigns it to the BackupRetentionPeriod field.
func (o *CreateCluster) SetBackupRetentionPeriod(v string) {
	o.BackupRetentionPeriod = &v
}

func (o CreateCluster) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clusterName"] = o.ClusterName
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["pgType"] = o.PgType
	}
	if true {
		toSerialize["pgVersion"] = o.PgVersion
	}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if o.ReadOnlyConnections != nil {
		toSerialize["readOnlyConnections"] = o.ReadOnlyConnections
	}
	if true {
		toSerialize["region"] = o.Region
	}
	if true {
		toSerialize["instanceType"] = o.InstanceType
	}
	if true {
		toSerialize["storage"] = o.Storage
	}
	if true {
		toSerialize["privateNetworking"] = o.PrivateNetworking
	}
	if true {
		toSerialize["allowedIpRanges"] = o.AllowedIpRanges
	}
	if true {
		toSerialize["pgConfig"] = o.PgConfig
	}
	if o.Replicas != nil {
		toSerialize["replicas"] = o.Replicas
	}
	if o.ClusterArchitecture != nil {
		toSerialize["clusterArchitecture"] = o.ClusterArchitecture
	}
	if o.BackupRetentionPeriod != nil {
		toSerialize["backupRetentionPeriod"] = o.BackupRetentionPeriod
	}
	return json.Marshal(toSerialize)
}

type NullableCreateCluster struct {
	value *CreateCluster
	isSet bool
}

func (v NullableCreateCluster) Get() *CreateCluster {
	return v.value
}

func (v *NullableCreateCluster) Set(val *CreateCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCluster(val *CreateCluster) *NullableCreateCluster {
	return &NullableCreateCluster{value: val, isSet: true}
}

func (v NullableCreateCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


