/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RunCheckForPasswordStrengthRequest struct for RunCheckForPasswordStrengthRequest
type RunCheckForPasswordStrengthRequest struct {
	Password string `json:"password"`
}

// NewRunCheckForPasswordStrengthRequest instantiates a new RunCheckForPasswordStrengthRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunCheckForPasswordStrengthRequest(password string) *RunCheckForPasswordStrengthRequest {
	this := RunCheckForPasswordStrengthRequest{}
	this.Password = password
	return &this
}

// NewRunCheckForPasswordStrengthRequestWithDefaults instantiates a new RunCheckForPasswordStrengthRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunCheckForPasswordStrengthRequestWithDefaults() *RunCheckForPasswordStrengthRequest {
	this := RunCheckForPasswordStrengthRequest{}
	return &this
}

// GetPassword returns the Password field value
func (o *RunCheckForPasswordStrengthRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *RunCheckForPasswordStrengthRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *RunCheckForPasswordStrengthRequest) SetPassword(v string) {
	o.Password = v
}

func (o RunCheckForPasswordStrengthRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableRunCheckForPasswordStrengthRequest struct {
	value *RunCheckForPasswordStrengthRequest
	isSet bool
}

func (v NullableRunCheckForPasswordStrengthRequest) Get() *RunCheckForPasswordStrengthRequest {
	return v.value
}

func (v *NullableRunCheckForPasswordStrengthRequest) Set(val *RunCheckForPasswordStrengthRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRunCheckForPasswordStrengthRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRunCheckForPasswordStrengthRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunCheckForPasswordStrengthRequest(val *RunCheckForPasswordStrengthRequest) *NullableRunCheckForPasswordStrengthRequest {
	return &NullableRunCheckForPasswordStrengthRequest{value: val, isSet: true}
}

func (v NullableRunCheckForPasswordStrengthRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunCheckForPasswordStrengthRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


