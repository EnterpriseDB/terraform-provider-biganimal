/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CloudProviderRegionInstanceType struct for CloudProviderRegionInstanceType
type CloudProviderRegionInstanceType struct {
	InstanceTypeId string `json:"instanceTypeId"`
	InstanceTypeName string `json:"instanceTypeName"`
	Ram float32 `json:"ram"`
	Cpu float32 `json:"cpu"`
	FamilyName string `json:"familyName"`
	Category string `json:"category"`
}

// NewCloudProviderRegionInstanceType instantiates a new CloudProviderRegionInstanceType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudProviderRegionInstanceType(instanceTypeId string, instanceTypeName string, ram float32, cpu float32, familyName string, category string) *CloudProviderRegionInstanceType {
	this := CloudProviderRegionInstanceType{}
	this.InstanceTypeId = instanceTypeId
	this.InstanceTypeName = instanceTypeName
	this.Ram = ram
	this.Cpu = cpu
	this.FamilyName = familyName
	this.Category = category
	return &this
}

// NewCloudProviderRegionInstanceTypeWithDefaults instantiates a new CloudProviderRegionInstanceType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudProviderRegionInstanceTypeWithDefaults() *CloudProviderRegionInstanceType {
	this := CloudProviderRegionInstanceType{}
	return &this
}

// GetInstanceTypeId returns the InstanceTypeId field value
func (o *CloudProviderRegionInstanceType) GetInstanceTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceTypeId
}

// GetInstanceTypeIdOk returns a tuple with the InstanceTypeId field value
// and a boolean to check if the value has been set.
func (o *CloudProviderRegionInstanceType) GetInstanceTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceTypeId, true
}

// SetInstanceTypeId sets field value
func (o *CloudProviderRegionInstanceType) SetInstanceTypeId(v string) {
	o.InstanceTypeId = v
}

// GetInstanceTypeName returns the InstanceTypeName field value
func (o *CloudProviderRegionInstanceType) GetInstanceTypeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceTypeName
}

// GetInstanceTypeNameOk returns a tuple with the InstanceTypeName field value
// and a boolean to check if the value has been set.
func (o *CloudProviderRegionInstanceType) GetInstanceTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceTypeName, true
}

// SetInstanceTypeName sets field value
func (o *CloudProviderRegionInstanceType) SetInstanceTypeName(v string) {
	o.InstanceTypeName = v
}

// GetRam returns the Ram field value
func (o *CloudProviderRegionInstanceType) GetRam() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Ram
}

// GetRamOk returns a tuple with the Ram field value
// and a boolean to check if the value has been set.
func (o *CloudProviderRegionInstanceType) GetRamOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ram, true
}

// SetRam sets field value
func (o *CloudProviderRegionInstanceType) SetRam(v float32) {
	o.Ram = v
}

// GetCpu returns the Cpu field value
func (o *CloudProviderRegionInstanceType) GetCpu() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value
// and a boolean to check if the value has been set.
func (o *CloudProviderRegionInstanceType) GetCpuOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpu, true
}

// SetCpu sets field value
func (o *CloudProviderRegionInstanceType) SetCpu(v float32) {
	o.Cpu = v
}

// GetFamilyName returns the FamilyName field value
func (o *CloudProviderRegionInstanceType) GetFamilyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FamilyName
}

// GetFamilyNameOk returns a tuple with the FamilyName field value
// and a boolean to check if the value has been set.
func (o *CloudProviderRegionInstanceType) GetFamilyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FamilyName, true
}

// SetFamilyName sets field value
func (o *CloudProviderRegionInstanceType) SetFamilyName(v string) {
	o.FamilyName = v
}

// GetCategory returns the Category field value
func (o *CloudProviderRegionInstanceType) GetCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *CloudProviderRegionInstanceType) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *CloudProviderRegionInstanceType) SetCategory(v string) {
	o.Category = v
}

func (o CloudProviderRegionInstanceType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["instanceTypeId"] = o.InstanceTypeId
	}
	if true {
		toSerialize["instanceTypeName"] = o.InstanceTypeName
	}
	if true {
		toSerialize["ram"] = o.Ram
	}
	if true {
		toSerialize["cpu"] = o.Cpu
	}
	if true {
		toSerialize["familyName"] = o.FamilyName
	}
	if true {
		toSerialize["category"] = o.Category
	}
	return json.Marshal(toSerialize)
}

type NullableCloudProviderRegionInstanceType struct {
	value *CloudProviderRegionInstanceType
	isSet bool
}

func (v NullableCloudProviderRegionInstanceType) Get() *CloudProviderRegionInstanceType {
	return v.value
}

func (v *NullableCloudProviderRegionInstanceType) Set(val *CloudProviderRegionInstanceType) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudProviderRegionInstanceType) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudProviderRegionInstanceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudProviderRegionInstanceType(val *CloudProviderRegionInstanceType) *NullableCloudProviderRegionInstanceType {
	return &NullableCloudProviderRegionInstanceType{value: val, isSet: true}
}

func (v NullableCloudProviderRegionInstanceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudProviderRegionInstanceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


