/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AllowedIpRange struct for AllowedIpRange
type AllowedIpRange struct {
	CidrBlock string `json:"cidrBlock"`
	Description string `json:"description"`
}

// NewAllowedIpRange instantiates a new AllowedIpRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllowedIpRange(cidrBlock string, description string) *AllowedIpRange {
	this := AllowedIpRange{}
	this.CidrBlock = cidrBlock
	this.Description = description
	return &this
}

// NewAllowedIpRangeWithDefaults instantiates a new AllowedIpRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllowedIpRangeWithDefaults() *AllowedIpRange {
	this := AllowedIpRange{}
	return &this
}

// GetCidrBlock returns the CidrBlock field value
func (o *AllowedIpRange) GetCidrBlock() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CidrBlock
}

// GetCidrBlockOk returns a tuple with the CidrBlock field value
// and a boolean to check if the value has been set.
func (o *AllowedIpRange) GetCidrBlockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CidrBlock, true
}

// SetCidrBlock sets field value
func (o *AllowedIpRange) SetCidrBlock(v string) {
	o.CidrBlock = v
}

// GetDescription returns the Description field value
func (o *AllowedIpRange) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AllowedIpRange) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *AllowedIpRange) SetDescription(v string) {
	o.Description = v
}

func (o AllowedIpRange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cidrBlock"] = o.CidrBlock
	}
	if true {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableAllowedIpRange struct {
	value *AllowedIpRange
	isSet bool
}

func (v NullableAllowedIpRange) Get() *AllowedIpRange {
	return v.value
}

func (v *NullableAllowedIpRange) Set(val *AllowedIpRange) {
	v.value = val
	v.isSet = true
}

func (v NullableAllowedIpRange) IsSet() bool {
	return v.isSet
}

func (v *NullableAllowedIpRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllowedIpRange(val *AllowedIpRange) *NullableAllowedIpRange {
	return &NullableAllowedIpRange{value: val, isSet: true}
}

func (v NullableAllowedIpRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllowedIpRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


