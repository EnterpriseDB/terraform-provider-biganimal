/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AssignRolePermissions200ResponseData struct for AssignRolePermissions200ResponseData
type AssignRolePermissions200ResponseData struct {
	PermissionsList []string `json:"permissionsList"`
	RoleId string `json:"roleId"`
}

// NewAssignRolePermissions200ResponseData instantiates a new AssignRolePermissions200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignRolePermissions200ResponseData(permissionsList []string, roleId string) *AssignRolePermissions200ResponseData {
	this := AssignRolePermissions200ResponseData{}
	this.PermissionsList = permissionsList
	this.RoleId = roleId
	return &this
}

// NewAssignRolePermissions200ResponseDataWithDefaults instantiates a new AssignRolePermissions200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignRolePermissions200ResponseDataWithDefaults() *AssignRolePermissions200ResponseData {
	this := AssignRolePermissions200ResponseData{}
	return &this
}

// GetPermissionsList returns the PermissionsList field value
func (o *AssignRolePermissions200ResponseData) GetPermissionsList() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.PermissionsList
}

// GetPermissionsListOk returns a tuple with the PermissionsList field value
// and a boolean to check if the value has been set.
func (o *AssignRolePermissions200ResponseData) GetPermissionsListOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PermissionsList, true
}

// SetPermissionsList sets field value
func (o *AssignRolePermissions200ResponseData) SetPermissionsList(v []string) {
	o.PermissionsList = v
}

// GetRoleId returns the RoleId field value
func (o *AssignRolePermissions200ResponseData) GetRoleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value
// and a boolean to check if the value has been set.
func (o *AssignRolePermissions200ResponseData) GetRoleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleId, true
}

// SetRoleId sets field value
func (o *AssignRolePermissions200ResponseData) SetRoleId(v string) {
	o.RoleId = v
}

func (o AssignRolePermissions200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["permissionsList"] = o.PermissionsList
	}
	if true {
		toSerialize["roleId"] = o.RoleId
	}
	return json.Marshal(toSerialize)
}

type NullableAssignRolePermissions200ResponseData struct {
	value *AssignRolePermissions200ResponseData
	isSet bool
}

func (v NullableAssignRolePermissions200ResponseData) Get() *AssignRolePermissions200ResponseData {
	return v.value
}

func (v *NullableAssignRolePermissions200ResponseData) Set(val *AssignRolePermissions200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignRolePermissions200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignRolePermissions200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignRolePermissions200ResponseData(val *AssignRolePermissions200ResponseData) *NullableAssignRolePermissions200ResponseData {
	return &NullableAssignRolePermissions200ResponseData{value: val, isSet: true}
}

func (v NullableAssignRolePermissions200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignRolePermissions200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


