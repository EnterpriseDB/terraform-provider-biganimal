/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PgVersion struct for PgVersion
type PgVersion struct {
	PgVersionId string `json:"pgVersionId"`
	PgVersionName string `json:"pgVersionName"`
}

// NewPgVersion instantiates a new PgVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPgVersion(pgVersionId string, pgVersionName string) *PgVersion {
	this := PgVersion{}
	this.PgVersionId = pgVersionId
	this.PgVersionName = pgVersionName
	return &this
}

// NewPgVersionWithDefaults instantiates a new PgVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPgVersionWithDefaults() *PgVersion {
	this := PgVersion{}
	return &this
}

// GetPgVersionId returns the PgVersionId field value
func (o *PgVersion) GetPgVersionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PgVersionId
}

// GetPgVersionIdOk returns a tuple with the PgVersionId field value
// and a boolean to check if the value has been set.
func (o *PgVersion) GetPgVersionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PgVersionId, true
}

// SetPgVersionId sets field value
func (o *PgVersion) SetPgVersionId(v string) {
	o.PgVersionId = v
}

// GetPgVersionName returns the PgVersionName field value
func (o *PgVersion) GetPgVersionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PgVersionName
}

// GetPgVersionNameOk returns a tuple with the PgVersionName field value
// and a boolean to check if the value has been set.
func (o *PgVersion) GetPgVersionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PgVersionName, true
}

// SetPgVersionName sets field value
func (o *PgVersion) SetPgVersionName(v string) {
	o.PgVersionName = v
}

func (o PgVersion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pgVersionId"] = o.PgVersionId
	}
	if true {
		toSerialize["pgVersionName"] = o.PgVersionName
	}
	return json.Marshal(toSerialize)
}

type NullablePgVersion struct {
	value *PgVersion
	isSet bool
}

func (v NullablePgVersion) Get() *PgVersion {
	return v.value
}

func (v *NullablePgVersion) Set(val *PgVersion) {
	v.value = val
	v.isSet = true
}

func (v NullablePgVersion) IsSet() bool {
	return v.isSet
}

func (v *NullablePgVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePgVersion(val *PgVersion) *NullablePgVersion {
	return &NullablePgVersion{value: val, isSet: true}
}

func (v NullablePgVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePgVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


