/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AccountNotification struct for AccountNotification
type AccountNotification struct {
	AccountNotificationId string `json:"accountNotificationId"`
	ClusterName string `json:"clusterName"`
	ObjectName string `json:"objectName"`
	Title string `json:"title"`
	Description string `json:"description"`
	NotificationType string `json:"notificationType"`
}

// NewAccountNotification instantiates a new AccountNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountNotification(accountNotificationId string, clusterName string, objectName string, title string, description string, notificationType string) *AccountNotification {
	this := AccountNotification{}
	this.AccountNotificationId = accountNotificationId
	this.ClusterName = clusterName
	this.ObjectName = objectName
	this.Title = title
	this.Description = description
	this.NotificationType = notificationType
	return &this
}

// NewAccountNotificationWithDefaults instantiates a new AccountNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountNotificationWithDefaults() *AccountNotification {
	this := AccountNotification{}
	return &this
}

// GetAccountNotificationId returns the AccountNotificationId field value
func (o *AccountNotification) GetAccountNotificationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNotificationId
}

// GetAccountNotificationIdOk returns a tuple with the AccountNotificationId field value
// and a boolean to check if the value has been set.
func (o *AccountNotification) GetAccountNotificationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountNotificationId, true
}

// SetAccountNotificationId sets field value
func (o *AccountNotification) SetAccountNotificationId(v string) {
	o.AccountNotificationId = v
}

// GetClusterName returns the ClusterName field value
func (o *AccountNotification) GetClusterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value
// and a boolean to check if the value has been set.
func (o *AccountNotification) GetClusterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterName, true
}

// SetClusterName sets field value
func (o *AccountNotification) SetClusterName(v string) {
	o.ClusterName = v
}

// GetObjectName returns the ObjectName field value
func (o *AccountNotification) GetObjectName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value
// and a boolean to check if the value has been set.
func (o *AccountNotification) GetObjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectName, true
}

// SetObjectName sets field value
func (o *AccountNotification) SetObjectName(v string) {
	o.ObjectName = v
}

// GetTitle returns the Title field value
func (o *AccountNotification) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *AccountNotification) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *AccountNotification) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value
func (o *AccountNotification) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AccountNotification) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *AccountNotification) SetDescription(v string) {
	o.Description = v
}

// GetNotificationType returns the NotificationType field value
func (o *AccountNotification) GetNotificationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotificationType
}

// GetNotificationTypeOk returns a tuple with the NotificationType field value
// and a boolean to check if the value has been set.
func (o *AccountNotification) GetNotificationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationType, true
}

// SetNotificationType sets field value
func (o *AccountNotification) SetNotificationType(v string) {
	o.NotificationType = v
}

func (o AccountNotification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountNotificationId"] = o.AccountNotificationId
	}
	if true {
		toSerialize["clusterName"] = o.ClusterName
	}
	if true {
		toSerialize["objectName"] = o.ObjectName
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["notificationType"] = o.NotificationType
	}
	return json.Marshal(toSerialize)
}

type NullableAccountNotification struct {
	value *AccountNotification
	isSet bool
}

func (v NullableAccountNotification) Get() *AccountNotification {
	return v.value
}

func (v *NullableAccountNotification) Set(val *AccountNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountNotification(val *AccountNotification) *NullableAccountNotification {
	return &NullableAccountNotification{value: val, isSet: true}
}

func (v NullableAccountNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


