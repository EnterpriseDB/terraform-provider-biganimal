/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConnectionsBrokerConnOptions struct for ConnectionsBrokerConnOptions
type ConnectionsBrokerConnOptions struct {
	Saml *ConnectionsBrokerConnOptionsSaml `json:"saml,omitempty"`
	Oidc *ConnectionsBrokerConnOptionsOidc `json:"oidc,omitempty"`
}

// NewConnectionsBrokerConnOptions instantiates a new ConnectionsBrokerConnOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionsBrokerConnOptions() *ConnectionsBrokerConnOptions {
	this := ConnectionsBrokerConnOptions{}
	return &this
}

// NewConnectionsBrokerConnOptionsWithDefaults instantiates a new ConnectionsBrokerConnOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionsBrokerConnOptionsWithDefaults() *ConnectionsBrokerConnOptions {
	this := ConnectionsBrokerConnOptions{}
	return &this
}

// GetSaml returns the Saml field value if set, zero value otherwise.
func (o *ConnectionsBrokerConnOptions) GetSaml() ConnectionsBrokerConnOptionsSaml {
	if o == nil || o.Saml == nil {
		var ret ConnectionsBrokerConnOptionsSaml
		return ret
	}
	return *o.Saml
}

// GetSamlOk returns a tuple with the Saml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionsBrokerConnOptions) GetSamlOk() (*ConnectionsBrokerConnOptionsSaml, bool) {
	if o == nil || o.Saml == nil {
		return nil, false
	}
	return o.Saml, true
}

// HasSaml returns a boolean if a field has been set.
func (o *ConnectionsBrokerConnOptions) HasSaml() bool {
	if o != nil && o.Saml != nil {
		return true
	}

	return false
}

// SetSaml gets a reference to the given ConnectionsBrokerConnOptionsSaml and assigns it to the Saml field.
func (o *ConnectionsBrokerConnOptions) SetSaml(v ConnectionsBrokerConnOptionsSaml) {
	o.Saml = &v
}

// GetOidc returns the Oidc field value if set, zero value otherwise.
func (o *ConnectionsBrokerConnOptions) GetOidc() ConnectionsBrokerConnOptionsOidc {
	if o == nil || o.Oidc == nil {
		var ret ConnectionsBrokerConnOptionsOidc
		return ret
	}
	return *o.Oidc
}

// GetOidcOk returns a tuple with the Oidc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionsBrokerConnOptions) GetOidcOk() (*ConnectionsBrokerConnOptionsOidc, bool) {
	if o == nil || o.Oidc == nil {
		return nil, false
	}
	return o.Oidc, true
}

// HasOidc returns a boolean if a field has been set.
func (o *ConnectionsBrokerConnOptions) HasOidc() bool {
	if o != nil && o.Oidc != nil {
		return true
	}

	return false
}

// SetOidc gets a reference to the given ConnectionsBrokerConnOptionsOidc and assigns it to the Oidc field.
func (o *ConnectionsBrokerConnOptions) SetOidc(v ConnectionsBrokerConnOptionsOidc) {
	o.Oidc = &v
}

func (o ConnectionsBrokerConnOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Saml != nil {
		toSerialize["saml"] = o.Saml
	}
	if o.Oidc != nil {
		toSerialize["oidc"] = o.Oidc
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionsBrokerConnOptions struct {
	value *ConnectionsBrokerConnOptions
	isSet bool
}

func (v NullableConnectionsBrokerConnOptions) Get() *ConnectionsBrokerConnOptions {
	return v.value
}

func (v *NullableConnectionsBrokerConnOptions) Set(val *ConnectionsBrokerConnOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionsBrokerConnOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionsBrokerConnOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionsBrokerConnOptions(val *ConnectionsBrokerConnOptions) *NullableConnectionsBrokerConnOptions {
	return &NullableConnectionsBrokerConnOptions{value: val, isSet: true}
}

func (v NullableConnectionsBrokerConnOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionsBrokerConnOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


