/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterDetailStorage struct for ClusterDetailStorage
type ClusterDetailStorage struct {
	VolumePropertiesId string `json:"volumePropertiesId"`
	VolumeTypeId string `json:"volumeTypeId"`
	Iops string `json:"iops"`
	Size string `json:"size"`
	Throughput string `json:"throughput"`
}

// NewClusterDetailStorage instantiates a new ClusterDetailStorage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterDetailStorage(volumePropertiesId string, volumeTypeId string, iops string, size string, throughput string) *ClusterDetailStorage {
	this := ClusterDetailStorage{}
	this.VolumePropertiesId = volumePropertiesId
	this.VolumeTypeId = volumeTypeId
	this.Iops = iops
	this.Size = size
	this.Throughput = throughput
	return &this
}

// NewClusterDetailStorageWithDefaults instantiates a new ClusterDetailStorage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterDetailStorageWithDefaults() *ClusterDetailStorage {
	this := ClusterDetailStorage{}
	return &this
}

// GetVolumePropertiesId returns the VolumePropertiesId field value
func (o *ClusterDetailStorage) GetVolumePropertiesId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumePropertiesId
}

// GetVolumePropertiesIdOk returns a tuple with the VolumePropertiesId field value
// and a boolean to check if the value has been set.
func (o *ClusterDetailStorage) GetVolumePropertiesIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumePropertiesId, true
}

// SetVolumePropertiesId sets field value
func (o *ClusterDetailStorage) SetVolumePropertiesId(v string) {
	o.VolumePropertiesId = v
}

// GetVolumeTypeId returns the VolumeTypeId field value
func (o *ClusterDetailStorage) GetVolumeTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumeTypeId
}

// GetVolumeTypeIdOk returns a tuple with the VolumeTypeId field value
// and a boolean to check if the value has been set.
func (o *ClusterDetailStorage) GetVolumeTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeTypeId, true
}

// SetVolumeTypeId sets field value
func (o *ClusterDetailStorage) SetVolumeTypeId(v string) {
	o.VolumeTypeId = v
}

// GetIops returns the Iops field value
func (o *ClusterDetailStorage) GetIops() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Iops
}

// GetIopsOk returns a tuple with the Iops field value
// and a boolean to check if the value has been set.
func (o *ClusterDetailStorage) GetIopsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Iops, true
}

// SetIops sets field value
func (o *ClusterDetailStorage) SetIops(v string) {
	o.Iops = v
}

// GetSize returns the Size field value
func (o *ClusterDetailStorage) GetSize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *ClusterDetailStorage) GetSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *ClusterDetailStorage) SetSize(v string) {
	o.Size = v
}

// GetThroughput returns the Throughput field value
func (o *ClusterDetailStorage) GetThroughput() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Throughput
}

// GetThroughputOk returns a tuple with the Throughput field value
// and a boolean to check if the value has been set.
func (o *ClusterDetailStorage) GetThroughputOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Throughput, true
}

// SetThroughput sets field value
func (o *ClusterDetailStorage) SetThroughput(v string) {
	o.Throughput = v
}

func (o ClusterDetailStorage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["volumePropertiesId"] = o.VolumePropertiesId
	}
	if true {
		toSerialize["volumeTypeId"] = o.VolumeTypeId
	}
	if true {
		toSerialize["iops"] = o.Iops
	}
	if true {
		toSerialize["size"] = o.Size
	}
	if true {
		toSerialize["throughput"] = o.Throughput
	}
	return json.Marshal(toSerialize)
}

type NullableClusterDetailStorage struct {
	value *ClusterDetailStorage
	isSet bool
}

func (v NullableClusterDetailStorage) Get() *ClusterDetailStorage {
	return v.value
}

func (v *NullableClusterDetailStorage) Set(val *ClusterDetailStorage) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterDetailStorage) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterDetailStorage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterDetailStorage(val *ClusterDetailStorage) *NullableClusterDetailStorage {
	return &NullableClusterDetailStorage{value: val, isSet: true}
}

func (v NullableClusterDetailStorage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterDetailStorage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


