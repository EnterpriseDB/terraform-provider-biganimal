/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RegisterAzure struct for RegisterAzure
type RegisterAzure struct {
	ClientId string `json:"clientId"`
	ClientSecret string `json:"clientSecret"`
	SubscriptionId string `json:"subscriptionId"`
	TenantId string `json:"tenantId"`
}

// NewRegisterAzure instantiates a new RegisterAzure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterAzure(clientId string, clientSecret string, subscriptionId string, tenantId string) *RegisterAzure {
	this := RegisterAzure{}
	this.ClientId = clientId
	this.ClientSecret = clientSecret
	this.SubscriptionId = subscriptionId
	this.TenantId = tenantId
	return &this
}

// NewRegisterAzureWithDefaults instantiates a new RegisterAzure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterAzureWithDefaults() *RegisterAzure {
	this := RegisterAzure{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *RegisterAzure) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *RegisterAzure) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *RegisterAzure) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value
func (o *RegisterAzure) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *RegisterAzure) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *RegisterAzure) SetClientSecret(v string) {
	o.ClientSecret = v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *RegisterAzure) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *RegisterAzure) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *RegisterAzure) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetTenantId returns the TenantId field value
func (o *RegisterAzure) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *RegisterAzure) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *RegisterAzure) SetTenantId(v string) {
	o.TenantId = v
}

func (o RegisterAzure) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clientId"] = o.ClientId
	}
	if true {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if true {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if true {
		toSerialize["tenantId"] = o.TenantId
	}
	return json.Marshal(toSerialize)
}

type NullableRegisterAzure struct {
	value *RegisterAzure
	isSet bool
}

func (v NullableRegisterAzure) Get() *RegisterAzure {
	return v.value
}

func (v *NullableRegisterAzure) Set(val *RegisterAzure) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterAzure) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterAzure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterAzure(val *RegisterAzure) *NullableRegisterAzure {
	return &NullableRegisterAzure{value: val, isSet: true}
}

func (v NullableRegisterAzure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterAzure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


