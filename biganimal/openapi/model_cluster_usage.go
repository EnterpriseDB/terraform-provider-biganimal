/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterUsage struct for ClusterUsage
type ClusterUsage struct {
	ClusterId string `json:"clusterId"`
	ClusterName string `json:"clusterName"`
	PgType ClusterUsagePgType `json:"pgType"`
	CloudProvider ClusterUsageCloudProvider `json:"cloudProvider"`
	VcpuHours float32 `json:"vcpuHours"`
	ClusterArchitecture *ClusterUsageClusterArchitecture `json:"clusterArchitecture,omitempty"`
	ClusterCreationTime *PointInTime `json:"clusterCreationTime,omitempty"`
}

// NewClusterUsage instantiates a new ClusterUsage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterUsage(clusterId string, clusterName string, pgType ClusterUsagePgType, cloudProvider ClusterUsageCloudProvider, vcpuHours float32) *ClusterUsage {
	this := ClusterUsage{}
	this.ClusterId = clusterId
	this.ClusterName = clusterName
	this.PgType = pgType
	this.CloudProvider = cloudProvider
	this.VcpuHours = vcpuHours
	return &this
}

// NewClusterUsageWithDefaults instantiates a new ClusterUsage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterUsageWithDefaults() *ClusterUsage {
	this := ClusterUsage{}
	return &this
}

// GetClusterId returns the ClusterId field value
func (o *ClusterUsage) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *ClusterUsage) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *ClusterUsage) SetClusterId(v string) {
	o.ClusterId = v
}

// GetClusterName returns the ClusterName field value
func (o *ClusterUsage) GetClusterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value
// and a boolean to check if the value has been set.
func (o *ClusterUsage) GetClusterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterName, true
}

// SetClusterName sets field value
func (o *ClusterUsage) SetClusterName(v string) {
	o.ClusterName = v
}

// GetPgType returns the PgType field value
func (o *ClusterUsage) GetPgType() ClusterUsagePgType {
	if o == nil {
		var ret ClusterUsagePgType
		return ret
	}

	return o.PgType
}

// GetPgTypeOk returns a tuple with the PgType field value
// and a boolean to check if the value has been set.
func (o *ClusterUsage) GetPgTypeOk() (*ClusterUsagePgType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PgType, true
}

// SetPgType sets field value
func (o *ClusterUsage) SetPgType(v ClusterUsagePgType) {
	o.PgType = v
}

// GetCloudProvider returns the CloudProvider field value
func (o *ClusterUsage) GetCloudProvider() ClusterUsageCloudProvider {
	if o == nil {
		var ret ClusterUsageCloudProvider
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *ClusterUsage) GetCloudProviderOk() (*ClusterUsageCloudProvider, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *ClusterUsage) SetCloudProvider(v ClusterUsageCloudProvider) {
	o.CloudProvider = v
}

// GetVcpuHours returns the VcpuHours field value
func (o *ClusterUsage) GetVcpuHours() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.VcpuHours
}

// GetVcpuHoursOk returns a tuple with the VcpuHours field value
// and a boolean to check if the value has been set.
func (o *ClusterUsage) GetVcpuHoursOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VcpuHours, true
}

// SetVcpuHours sets field value
func (o *ClusterUsage) SetVcpuHours(v float32) {
	o.VcpuHours = v
}

// GetClusterArchitecture returns the ClusterArchitecture field value if set, zero value otherwise.
func (o *ClusterUsage) GetClusterArchitecture() ClusterUsageClusterArchitecture {
	if o == nil || o.ClusterArchitecture == nil {
		var ret ClusterUsageClusterArchitecture
		return ret
	}
	return *o.ClusterArchitecture
}

// GetClusterArchitectureOk returns a tuple with the ClusterArchitecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUsage) GetClusterArchitectureOk() (*ClusterUsageClusterArchitecture, bool) {
	if o == nil || o.ClusterArchitecture == nil {
		return nil, false
	}
	return o.ClusterArchitecture, true
}

// HasClusterArchitecture returns a boolean if a field has been set.
func (o *ClusterUsage) HasClusterArchitecture() bool {
	if o != nil && o.ClusterArchitecture != nil {
		return true
	}

	return false
}

// SetClusterArchitecture gets a reference to the given ClusterUsageClusterArchitecture and assigns it to the ClusterArchitecture field.
func (o *ClusterUsage) SetClusterArchitecture(v ClusterUsageClusterArchitecture) {
	o.ClusterArchitecture = &v
}

// GetClusterCreationTime returns the ClusterCreationTime field value if set, zero value otherwise.
func (o *ClusterUsage) GetClusterCreationTime() PointInTime {
	if o == nil || o.ClusterCreationTime == nil {
		var ret PointInTime
		return ret
	}
	return *o.ClusterCreationTime
}

// GetClusterCreationTimeOk returns a tuple with the ClusterCreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUsage) GetClusterCreationTimeOk() (*PointInTime, bool) {
	if o == nil || o.ClusterCreationTime == nil {
		return nil, false
	}
	return o.ClusterCreationTime, true
}

// HasClusterCreationTime returns a boolean if a field has been set.
func (o *ClusterUsage) HasClusterCreationTime() bool {
	if o != nil && o.ClusterCreationTime != nil {
		return true
	}

	return false
}

// SetClusterCreationTime gets a reference to the given PointInTime and assigns it to the ClusterCreationTime field.
func (o *ClusterUsage) SetClusterCreationTime(v PointInTime) {
	o.ClusterCreationTime = &v
}

func (o ClusterUsage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clusterId"] = o.ClusterId
	}
	if true {
		toSerialize["clusterName"] = o.ClusterName
	}
	if true {
		toSerialize["pgType"] = o.PgType
	}
	if true {
		toSerialize["cloudProvider"] = o.CloudProvider
	}
	if true {
		toSerialize["vcpuHours"] = o.VcpuHours
	}
	if o.ClusterArchitecture != nil {
		toSerialize["clusterArchitecture"] = o.ClusterArchitecture
	}
	if o.ClusterCreationTime != nil {
		toSerialize["clusterCreationTime"] = o.ClusterCreationTime
	}
	return json.Marshal(toSerialize)
}

type NullableClusterUsage struct {
	value *ClusterUsage
	isSet bool
}

func (v NullableClusterUsage) Get() *ClusterUsage {
	return v.value
}

func (v *NullableClusterUsage) Set(val *ClusterUsage) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterUsage) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterUsage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterUsage(val *ClusterUsage) *NullableClusterUsage {
	return &NullableClusterUsage{value: val, isSet: true}
}

func (v NullableClusterUsage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterUsage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


