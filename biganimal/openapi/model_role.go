/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Role struct for Role
type Role struct {
	RoleName string `json:"roleName"`
	RoleId string `json:"roleId"`
	RoleDescription string `json:"roleDescription"`
}

// NewRole instantiates a new Role object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRole(roleName string, roleId string, roleDescription string) *Role {
	this := Role{}
	this.RoleName = roleName
	this.RoleId = roleId
	this.RoleDescription = roleDescription
	return &this
}

// NewRoleWithDefaults instantiates a new Role object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleWithDefaults() *Role {
	this := Role{}
	return &this
}

// GetRoleName returns the RoleName field value
func (o *Role) GetRoleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value
// and a boolean to check if the value has been set.
func (o *Role) GetRoleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleName, true
}

// SetRoleName sets field value
func (o *Role) SetRoleName(v string) {
	o.RoleName = v
}

// GetRoleId returns the RoleId field value
func (o *Role) GetRoleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value
// and a boolean to check if the value has been set.
func (o *Role) GetRoleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleId, true
}

// SetRoleId sets field value
func (o *Role) SetRoleId(v string) {
	o.RoleId = v
}

// GetRoleDescription returns the RoleDescription field value
func (o *Role) GetRoleDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleDescription
}

// GetRoleDescriptionOk returns a tuple with the RoleDescription field value
// and a boolean to check if the value has been set.
func (o *Role) GetRoleDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleDescription, true
}

// SetRoleDescription sets field value
func (o *Role) SetRoleDescription(v string) {
	o.RoleDescription = v
}

func (o Role) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["roleName"] = o.RoleName
	}
	if true {
		toSerialize["roleId"] = o.RoleId
	}
	if true {
		toSerialize["roleDescription"] = o.RoleDescription
	}
	return json.Marshal(toSerialize)
}

type NullableRole struct {
	value *Role
	isSet bool
}

func (v NullableRole) Get() *Role {
	return v.value
}

func (v *NullableRole) Set(val *Role) {
	v.value = val
	v.isSet = true
}

func (v NullableRole) IsSet() bool {
	return v.isSet
}

func (v *NullableRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRole(val *Role) *NullableRole {
	return &NullableRole{value: val, isSet: true}
}

func (v NullableRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


