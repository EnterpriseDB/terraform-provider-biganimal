/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1. 

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdatePgConfigTemplate struct for UpdatePgConfigTemplate
type UpdatePgConfigTemplate struct {
	MachineSettings [][]string `json:"machineSettings,omitempty"`
	TemplateDescription *string `json:"templateDescription,omitempty"`
	TemplateName string `json:"templateName"`
	TemplateSettings [][]string `json:"templateSettings,omitempty"`
}

// NewUpdatePgConfigTemplate instantiates a new UpdatePgConfigTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePgConfigTemplate(templateName string) *UpdatePgConfigTemplate {
	this := UpdatePgConfigTemplate{}
	this.TemplateName = templateName
	return &this
}

// NewUpdatePgConfigTemplateWithDefaults instantiates a new UpdatePgConfigTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePgConfigTemplateWithDefaults() *UpdatePgConfigTemplate {
	this := UpdatePgConfigTemplate{}
	return &this
}

// GetMachineSettings returns the MachineSettings field value if set, zero value otherwise.
func (o *UpdatePgConfigTemplate) GetMachineSettings() [][]string {
	if o == nil || o.MachineSettings == nil {
		var ret [][]string
		return ret
	}
	return o.MachineSettings
}

// GetMachineSettingsOk returns a tuple with the MachineSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePgConfigTemplate) GetMachineSettingsOk() ([][]string, bool) {
	if o == nil || o.MachineSettings == nil {
		return nil, false
	}
	return o.MachineSettings, true
}

// HasMachineSettings returns a boolean if a field has been set.
func (o *UpdatePgConfigTemplate) HasMachineSettings() bool {
	if o != nil && o.MachineSettings != nil {
		return true
	}

	return false
}

// SetMachineSettings gets a reference to the given [][]string and assigns it to the MachineSettings field.
func (o *UpdatePgConfigTemplate) SetMachineSettings(v [][]string) {
	o.MachineSettings = v
}

// GetTemplateDescription returns the TemplateDescription field value if set, zero value otherwise.
func (o *UpdatePgConfigTemplate) GetTemplateDescription() string {
	if o == nil || o.TemplateDescription == nil {
		var ret string
		return ret
	}
	return *o.TemplateDescription
}

// GetTemplateDescriptionOk returns a tuple with the TemplateDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePgConfigTemplate) GetTemplateDescriptionOk() (*string, bool) {
	if o == nil || o.TemplateDescription == nil {
		return nil, false
	}
	return o.TemplateDescription, true
}

// HasTemplateDescription returns a boolean if a field has been set.
func (o *UpdatePgConfigTemplate) HasTemplateDescription() bool {
	if o != nil && o.TemplateDescription != nil {
		return true
	}

	return false
}

// SetTemplateDescription gets a reference to the given string and assigns it to the TemplateDescription field.
func (o *UpdatePgConfigTemplate) SetTemplateDescription(v string) {
	o.TemplateDescription = &v
}

// GetTemplateName returns the TemplateName field value
func (o *UpdatePgConfigTemplate) GetTemplateName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TemplateName
}

// GetTemplateNameOk returns a tuple with the TemplateName field value
// and a boolean to check if the value has been set.
func (o *UpdatePgConfigTemplate) GetTemplateNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplateName, true
}

// SetTemplateName sets field value
func (o *UpdatePgConfigTemplate) SetTemplateName(v string) {
	o.TemplateName = v
}

// GetTemplateSettings returns the TemplateSettings field value if set, zero value otherwise.
func (o *UpdatePgConfigTemplate) GetTemplateSettings() [][]string {
	if o == nil || o.TemplateSettings == nil {
		var ret [][]string
		return ret
	}
	return o.TemplateSettings
}

// GetTemplateSettingsOk returns a tuple with the TemplateSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePgConfigTemplate) GetTemplateSettingsOk() ([][]string, bool) {
	if o == nil || o.TemplateSettings == nil {
		return nil, false
	}
	return o.TemplateSettings, true
}

// HasTemplateSettings returns a boolean if a field has been set.
func (o *UpdatePgConfigTemplate) HasTemplateSettings() bool {
	if o != nil && o.TemplateSettings != nil {
		return true
	}

	return false
}

// SetTemplateSettings gets a reference to the given [][]string and assigns it to the TemplateSettings field.
func (o *UpdatePgConfigTemplate) SetTemplateSettings(v [][]string) {
	o.TemplateSettings = v
}

func (o UpdatePgConfigTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MachineSettings != nil {
		toSerialize["machineSettings"] = o.MachineSettings
	}
	if o.TemplateDescription != nil {
		toSerialize["templateDescription"] = o.TemplateDescription
	}
	if true {
		toSerialize["templateName"] = o.TemplateName
	}
	if o.TemplateSettings != nil {
		toSerialize["templateSettings"] = o.TemplateSettings
	}
	return json.Marshal(toSerialize)
}

type NullableUpdatePgConfigTemplate struct {
	value *UpdatePgConfigTemplate
	isSet bool
}

func (v NullableUpdatePgConfigTemplate) Get() *UpdatePgConfigTemplate {
	return v.value
}

func (v *NullableUpdatePgConfigTemplate) Set(val *UpdatePgConfigTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePgConfigTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePgConfigTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePgConfigTemplate(val *UpdatePgConfigTemplate) *NullableUpdatePgConfigTemplate {
	return &NullableUpdatePgConfigTemplate{value: val, isSet: true}
}

func (v NullableUpdatePgConfigTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePgConfigTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


