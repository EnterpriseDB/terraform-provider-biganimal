/*
BigAnimal

BigAnimal REST API v2 <br /><br /> Please visit [API v2 Changelog page](/api/docs/v2migration.html) for information about migrating from API v1.

API version: 2.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Model400 struct for Model400
type Model400 struct {
	Error *Error400 `json:"error,omitempty"`
}

// NewModel400 instantiates a new Model400 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModel400() *Model400 {
	this := Model400{}
	return &this
}

// NewModel400WithDefaults instantiates a new Model400 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModel400WithDefaults() *Model400 {
	this := Model400{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *Model400) GetError() Error400 {
	if o == nil || o.Error == nil {
		var ret Error400
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Model400) GetErrorOk() (*Error400, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *Model400) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given Error400 and assigns it to the Error field.
func (o *Model400) SetError(v Error400) {
	o.Error = &v
}

func (o Model400) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableModel400 struct {
	value *Model400
	isSet bool
}

func (v NullableModel400) Get() *Model400 {
	return v.value
}

func (v *NullableModel400) Set(val *Model400) {
	v.value = val
	v.isSet = true
}

func (v NullableModel400) IsSet() bool {
	return v.isSet
}

func (v *NullableModel400) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModel400(val *Model400) *NullableModel400 {
	return &NullableModel400{value: val, isSet: true}
}

func (v NullableModel400) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModel400) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


